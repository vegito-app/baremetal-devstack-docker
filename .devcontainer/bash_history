git branch 
make frontend-node-modules 
make gcloud-auth-
make gcloud-auth-login 
VERSION=v0.0.1 make application-image terraform-plan 
make docker-login 
make terraform-init 
VERSION=v0.0.1 make terraform-plan 
gcloud config get-value project
make go-mod-tidy
make go-mod-vendor
gcloud iam service-accounts list 
make terraform-plan 
VERSION=v0.0.1 make application-image terraform-apply-auto-approve 
make terraform-import 
make terraform-refresh 
VERSION=v0.0.1 make terraform-apply-auto-approve 
VERSION=v0.0.1 make terraform-import 
VERSION=v0.0.1 make terraform-plan
make backend-run 
make backend-install 
make gcloud-auth-func-logs 
gcloud functions logs read projects/utrade-taxi-run-0/locations/us-central1/functions/utrade-us-central1-identity-platform-before-create
gcloud functions logs read projects/utrade-taxi-run-0/locations/us-central1/functions/utrade-us-central1-identity-platform-before-sign-in
gcloud functions logs read projects/utrade-taxi-run-0/locations/us-central1/functions/utrade-us-central1-identity-platform-before-signin
VERSION=v0.0.1 make terraform-refresh 
htop
make go-mod tidy
make go-mod-tidy 
BUILDER_VRSION=v0.0.0 VERSION=v0.0.3 make application-image terraform-plan terraform-apply-auto-approve 
make unlock-docker-sock 
BUILDER_VERSION=v0.0.0 VERSION=v0.0.3 make application-image terraform-plan terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.3 make application-image terraform-plan terraform-apply-auto-approve 
git tag -f s
git reset HEAD~1
git log
env|grep -i utrade
make local-image
make local-image-run 
gcloud functions list 
gcloud functions logs utrade-us-central1-identity-platform-before-create
gcloud functions logs read utrade-us-central1-identity-platform-before-create
gcloud functions logs read utrade-us-central1-identity-platform-before-sign-in
gcloud functions logs read utrade-us-central1-identity-platform-before-signin
gcloud functions logs read --start-time=2024-08-09 utrade-us-central1-identity-platform-before-signin
gcloud functions logs read --start-time=2024-08-09 utrade-us-central1-identity-platform-before-create
gcloud iam service-accounts describe firebase-adminsdk-vxdj8@utrade-taxi-run-0.iam.gserviceaccount.com 
gcloud functions logs read --execution-id=vbwic0ky3ehm utrade-us-central1-identity-platform-before-create
gcloud functions logs read --execution-id=vbwic0ky3ehm --min-log-level=debug utrade-us-central1-identity-platform-before-create
gcloud functions logs read --execution-id=vbwic0ky3ehm --min-log-level=infoutrade-us-central1-identity-platform-before-create
gcloud functions logs read --execution-id=vbwic0ky3ehm  --verbosity=debug utrade-us-central1-identity-platform-before-create
gcloud functions logs read --execution-id=vbwic0ky3ehm  --verbosity=debug utrade-us-central1-identity-platform-before-create --format=json
gcloud functions logs read --execution-id=vbwic0ky3ehm  --verbosity=debug utrade-us-central1-identity-platform-before-create 
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-create 
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-signin 
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-signin --user-output-enabled 
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-signin --help 
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-signin --format=
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-create --format=json
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-signin --format= --start-time="2024-08-10 06:15:01.128"
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-signin --format= --start-time="2024-08-10 06:10:01.128"
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-signin --format=json --start-time="2024-08-10 06:10:01.128"
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-signin --format=json --start-
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-create --format=json --start-time="2024-08-10 06:10:01.128"
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-create --format=json --start-time="2024-08-10"
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-create --desc
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-create --order=desc
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-create
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-create --freshness 10m
gcloud logging read "resource.type=cloud_function AND resource.labels.function_name=utrade-us-central1-identity-platform-before-create" --limit 50 --format json --order desc --freshness 10m 
gcloud logging read "resource.type=cloud_function AND resource.labels.function_name=utrade-us-central1-identity-platform-before-create" --limit 50  --order desc --freshness 10m 
gcloud logging read "resource.type=cloud_function AND resource.labels.function_name=utrade-us-central1-identity-platform-before-create" --limit 50  --order desc --freshness 20m 
gcloud logging read "resource.type=cloud_function AND resource.labels.function_name=utrade-us-central1-identity-platform-before-create" --limit 50 --format json --order desc --freshness 20m 
git,log
pwd
code ~/go/pkg/mod/firebase.google.com/go/v4\@v4.14.1/
gcloud iam  service-accounts list 
gcloud logging read "resource.type=cloud_function AND resource.labels.function_name=utrade-us-central1-identity-platform-before-create" --limit 50  --order desc 
gcloud logging read "resource.type=cloud_function AND resource.labels.function_name=utrade-us-central1-identity-platform-before-create" --limit 50  --order desc |more
BUILDER_VERSION=v0.0.0 VERSION=v0.0.2 make application-image terraform-plan terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.2 make application-image terraform-plan terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.1 make application-image terraform-plan terraform-apply-auto-approve 
ls
make builder-image
git reset s
rm -rf gcloud/infra/auth/firebase && cp -r firebase gcloud/infra/auth/firebase
rm -rf gcloud/infra/auth/firebase && cp -r backend/firebase gcloud/infra/auth/firebase
make go-mod-tidy go-mod-vendor
git add -f .devcontainer/vscode/userData/globalStorage/genieai.chatgpt-vscode/
ls .devcontainer/vscode/userData/
ls .devcontainer/vscode/userData/globalStorage/
du -sh .devcontainer/*
du -sh backend/vendor/
du -sh gcloud/infra/auth/*
make go-mod-vendor-rm 
echo $?
git add .devcontainer/bash_history 
git commit --amend --no-edit
git branch
git push origin codespace-verbose-spoon-97gvv6p7q7pf746:dev
git branch -a
git fetch -a
git rebase -i origin/codespace-stunning-couscous-jjp66rxj4992jg6w 
git rebase -i origin/codespace-verbose-spoon-97gvv6p7q7pf746 
git fetch -p
git push origin :codespace-stunning-couscous-jjp66rxj4992jg6w 
git push origin :codespace-verbose-spoon-97gvv6p7q7pf746 
git checkout dev
git pull --rebase
git rebase --continu
git rebase origin/dev 
git rebase --continue 
git rebase --edit-todo 
git push 
git rebase origin/codespace-verbose-spoon-97gvv6p7q7pf746 
git branch -d codespace-verbose-spoon-97gvv6p7q7pf746  
code .devcontainer/gopath/pkg/mod/firebase.google.com/go/v4@v4.14.1/
env |grep -i firebase
env |grep -i utrade_firebase
env |grep -i maps
gcloud iam service-accounts list
echo $GOOGLE_CLOUD_CREDENTIALS |jq
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.2 make terraform-plan 
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.2 make terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.1 make terraform-apply-auto-approve 
gcloud logging read "resource.type=cloud_function AND resource.labels.function_name=utrade-us-central1-identity-platform-before-create" --limit 50  --freshness 2m --order desc |more
Bas
make frontend-start 
git push --set-upstream origin dev 
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.1 make terraform-pl@
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.1 make terraform-plan 
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.1 make terraform-import 
cd ..
make terraform-apply-auto-approve 
make go-mod)tidy
make go-od-vendor
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.2 make application-image terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.1 make application-image terraform-apply-auto-approve 
ake go-mod-tidy
cd gcloud/infra/auth/go/
go mod tidy
go mod vendor
cd -
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.2 make -C ../../..  builder-image  application-image terraform-apply-auto-approve 
make unl
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.2 make   builder-image  application-image terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 make application-image terraform-apply-auto-approve 
make backend-run
ls frontend/
ls frontend/*
ls -l frontend
make local-image-run
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.2 make application-image terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 make terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.2 make terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 make terraform-apply-auto-approve a
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 make application-image terraform-apply-auto-approve a
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.2 make terraform-apply-auto-approve a
mount
env|grep -i database
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 make terraform-apply-auto-approve
git fetch 
git origin -v
git remote -v
git  push origin master 
git checkout -b dev
git push --set-upstream origin dev v
sudo rm -rf .devcontainer/gopath/pkg/mod/github.com/7d4b9/
firebase --help
firebase list
firebase help
firebase firestore
gcloud firestore databases --list --tr
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 make terraform-plan 
gcloud firestore list
gcloud firestore database list
gcloud firestore databases list
gcloud firestore databases list --help
firebase project
firebaseinfo
firebase info
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 make terraform-import 
cd gcloud/
terraform import
terraform import google_firebase_database_instance utrade
terraform import google_firebase_database_instance.utrade
terraform import google_firebase_database_instance.utrade utrade-taxi-run-0-default-rtdb
terraform import module.infra.google_firebase_database_instance.utrade utrade-taxi-run-0-default-rtdb
terraform import google_firebase_database_instance.utrade module.infra.utrade-taxi-run-0-default-rtdb
gcloud firebase projects:list
gcloud firebase projects list
gcloud firebase 
make terraform-state-rm 
terraform state list
terraform -chdir ./cloud state list
terraform -chdir=./cloud state list
make terraform-state-list 
terraform state --help
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 make terraform-state-show 
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 make terraform-state-show-all 
make 
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 make module.secrets.google_identity_platform_default_supported_idp_config.google[0]-show 
BUILDER_IMAGE_VERSION=v0.0.2 VERSION=v0.0.1 make terraform-apply-auto-approve 
git clone https://github.com/7d4b9/firebase-admin-go.git
code firebase-admin-go/
BUILDER_IMAGE_VERSION=v0.0.2 VERSION=v0.0.2 make terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.2 VERSION=v0.0.0 make application-image terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.2 VERSION=v0.0.0 make builder-image application-image terraform-apply-auto-approve 
npm install
BUILDER_IMAGE_VERSION=v0.0.2 VERSION=v0.0.1 make application-image terraform-apply-auto-approve 
npm start
nodejs --version
node --version
BUILDER_IMAGE_VERSION=v0.0.2 VERSION=v0.0.0 make terraform-plan 
BUILDER_IMAGE_VERSION=v0.0.2 VERSION=v0.0.0 make terraform-apply-auto-approve 
cd gcloud/infra/auth/
sudo npm install -g npm-check-updates
ncu -u
rm -r node_modules/ package-lock.json 
npm i
npm i @google-gcloud/firestore
npm i @grpc/grpc-js
npm update
terraform init --upgrade
BUILDER_IMAGE_VERSION=v0.0.2 VERSION=v0.0.1 make terraform-plan 
code ..
cd functions/
cd ../gcloud/infra/auth/
ln ../../../functions/index.js .
ln -h
ln
ln --help
ln -f ../../../functions/index.js .
commment faire pointer un front vers cett emulateur ?
make local-firebase-emulators-init 
make local-firebase-emulators-start 
make local-firebase-emulators-start
mv functions/ local/firebase/
cd local/firebase/
ln -s ../../../gcloud/infra/auth functions/auth
git add functions/auth
git status 
ls -a
ln -s ../../../gcloud/infra/auth auth
ln `pwd`/__auth auth
ln -s `pwd`/__auth auth
cd infra/auth/
cd local/firebase/functions/
ls -alh ../../../gcloud/infra/auth
ls -alh ../../../gcloud/infra/
ls -la
rm auth 
ls auth 
ls auth/*
ls -lha ../../../gcloud/infra/auth 
ls -lha ../../../gcloud/infra/
firebase init emulators
npm install -g firebase-tools
cd /workspaces/refactored-winner/
sudo npm install -g firebase-tools
firebase login
firebase emulators:start
uname -a
sudo apt-get install -y openjdk-11-jdk
sudo apt-get update
apt-get install -y software-properties-common
sudo apt-get install -y software-properties-common
sudp add-apt-repository ppa:openjdk-r/ppa
sudo add-apt-repository ppa:openjdk-r/ppa
sudo apt update
sudo apt search openjdk
apt-cache search openjdk
sudo apt-get install -y openjdk-17-jdk
make local-builder-image 
firebase init
ls -lh ..
ls -lh ../..
cd /var/lib/docker/codespacemount/workspace/refactored-winner/
ls -lha
ls -lh ../../..
cd /workspaces/refactored-winner/r
firebase init emulators --no-localhost
make local-firebase-emulators
firebase emulators init --help
firebase init emulators --help
firebase init functions
make local-docker-compose-firebase-emulators-up 
cd refactored-winner/
docker compose rm   firebase-emulators 
ls local/
ls local/firebase/
ls local/firebase/functions/
ls -al local/firebase/functions/
ln -s `pwd`/gcloud/infra/auth  local/firebase/functions/
docker system prune -f -a
git rebase 97gvv6p7q7pf746
git rebase origin/codespace-humble-meme-wrq66vwrr4wh5979 
gi tlog
cd local/firebase/functions
ls  /workspaces/refactored-winner/gcloud/infra/auth
make local-docker-compose-firebase-emulators-rm
make local-docker-compose-firebase-emulators
make local-docker-compose-firebase-emulators-rm 
make local-docker-firebase-emulators-
make local-docker-firebase-emulators-up
rm auth
curl localhost:4000
docker ps
make local-docker-firebase-emulators-up 
cat /etc/hosts
sudo apt-get update && apt-get install -y socat
sudo apt-get update && sudo apt-get install -y socat
socat TCP-LISTEN:4000,fork TCP:firebase-emulators:4000
curl firebase-emulators:4000
socat TCP-LISTEN:4000,fork TCP:172.18.0.2/16:4000
socat TCP-LISTEN:4000,fork TCP:172.18.0.2:4000
make local-firebase-docker-emulators-logs 
docker copose up --help
nc -z firebase 4000  && echo ok
socat TCP-LISTEN:4000,fork TCP:localhost:4000
socat TCP-LISTEN:4000,fork TCP:firebase-emulators4001
make local-docker-compose-firebase-emulators-up
git branch -d
git log --oneline 
git push --set-upstream origin codespace-humble-meme-wrq66vwrr4wh5979:dev
nc -z localhost 4000 && echo ok
nc -z firebase 4001 && echo ok
make go-local/proxy-mod-tidy 
nc -z firebase 4000 && echo ok
cd local/proxy/
go mod init github.com/7d4b9/utrade/local/proxy
who
whoami 
docker ps$
docker compose stop firebase-emulator
docker compose stop --help
docker compose down --help
docker compose rm --help
make local-firebase-docker-emulators-logs
docker compose logs --help
docker compose logs --follow firebase-emulator
docker compose logs  firebase-emulator
make local-firebase-docker-emulators-rm
make local-firebase-docker-emulators
bg
make local-firebase-docker-emulators-rm 
make local-docker-compose-firebase-emulators-stop 
docker ps -a
docker rm -f 19c38
sudo apt-get install netcat
sudo apt-get install -y netcat
sudo apt-get install -y netcat-openbsd
nc -h
nc -z firebase-emulators 4000
nc -z 172.18.0.2 4000
nc -z localhost 4000
nc -z firebase-emulator 4000
make local-docker-compose-firebase-emulators-logs 
nc -z firebas 5001
nc -z firebase 5001
make  local-builder-image 
nc -z 0.0.0.0 4000
make local-builder-image
ps aux
make local-firebase-emulators-install 
kill -INT 7
make local-docker-compose-firebase-emulators-build-no-pull 
ss -tulnp
ls -lha local/
ls -lha local/firebase/
ls -lha local/firebase/data/
make local-firebase-emulators-stop 
firebase emulators:help
firebase emulators --help
make local-docker-compose-firebase-emulators-b
make local-docker-compose-firebase-emulators-bash 
chmod o+rwx local/firebase/data/
netstat -tuln
sudo apt-get install -y netstat
sudo apt-get install net-tools
sudo netstat -tulnp
sudo apt install iproute2
sudo ss -tulnp
sudo su
sudo -i
lsof -i :4096
sudo apt-get install lsof
lsof -i :36305
socat TCP-LISTEN:4000,fork,reuseaddr TCP:localhost:4000
socat TCP-LISTEN:4000,fork,reuseaddr TCP:firebase-emulators:4000
docker images
git push
sudo apt-get install iptables -y
sudo iptables -t nat -A PREROUTING -p tcp --dport 4000 -j DNAT --to-destination 'firebase-emulators':8000
sudo iptables -t nat -A PREROUTING -p tcp --dport 4000 -j DNAT --to-destination 'firebase\-emulators':8000
sudo iptables -t nat -A PREROUTING -p tcp --dport 4000 -j DNAT --to-destination dd5e3ea010ea:8000
dig +short firebase-emulators
sudo apt-get install dig -y
ping
sudo apt-get install dnsutils
man dig
dig --help
test
test --help
ps aux|grep 4000
sudo iptables -t nat -A PREROUTING -p tcp --dport 4000 -j DNAT --to-destination `dig +short firebase-emulators`:4000
make local-docker-compose-firebase-emulators-bash
make local-build
make builder-image 
make frontend-npm-ci 
make frontend-build
make frontend-bundle 
cd frontend/
npm install firebaseui
npm install material-design-lite
npm install material-ui/core
rm /home/devuser/.ssh/known_hosts
npm install @material-ui/core
make frontend-build 
npm install @material-ui/core --save
npm install firebase
npm install @firebase @firebase/Auth
npm install @firebase @firebase/auth
npm install firebase @firebase/auth
npm install firebase @firebase/compat/auth
npm install firebase @firebase/compat
npm install firebase/compat
ls -alh
du -sh .*
du -sh .vscode-server/*
npm install material-design-lite --save
cd
code .
echo $HISTSIZE
. ~/.bashrc 
cat ~/.bashrc 
cd 
cat .bashrc 
make gcloud-auth-default-application-credentials 
docker images -a
docker run -v /:`pwd`/root --rm -it -w `pwd`/root 0bb51c6f07de bash
docker run -v /:`pwd`/root --rm --entrypoint bash -it -w `pwd`/root 0bb51c6f07de 
env|grep -i folder
make local-docker-compose-firebase-emulators-rm  local-builder-image local-docker-compose-firebase-emulators-up 
git rm dev-entrypoint.sh 
git rm -f dev-entrypoint.sh 
make local-docker-compose-firebase-emulators-rm local-docker-compose-firebase-emulators-up 
git push -f
git reset ad39
git push git push 
ps aux|grep socat
make terraform-validate 
make terraform-plan
git rm -f .env
git tag -l
git reset origin/dev 
unset GOOGLE_APPLICATION_CREDENTIALS
USER=devuser@115528929ec4 make terraform-plan
make terraform-init
echo $GOOGLE_CLOUD_WEB_IDP_GOOGLE_OAUTH_SECRET
echo $TF_VAR_GOOGLE_CLOUD_WEB_IDP_GOOGLE_OAUTH_SECRET
gcloud secrets list 
gcloud secrets versions list 
gcloud secrets versions list utrade-us-central1-googlemaps-api-key
gcloud secrets versions access  utrade-us-central1-googlemaps-api-key 
gcloud secrets versions access --secret utrade-us-central1-googlemaps-api-key 1
gcloud secrets versions access --secret utrade-us-central1-firebase-config 1
gcloud secrets versions access --secret utrade-us-central1-firebase-config 1|jq
gcloud run list
gcloud run services list
gcloud logging logs list
gcloud logging read 
gcloud logging read --help
gcloud functions list
gcloud functions logs read utrade-us-central1-identity-platform-before-create --filter=jsonPayload
gcloud run services list 
gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=utrade AND jsonPayload"
gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=utrade"
gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=utrade AND textPayload"
gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=utrade"|grep -i jsonpayload
gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=utrade"|more
npm audit --fix
npm audit fix
gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=utrade --freshness 1m
gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=utrade" --freshness 1m
gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=utrade" --freshness 1m >ll
gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=utrade" --format  jsonpayload
env
git clone https://github.com/firebase/firebase-admin-go.git
mkdir _workspace
cd _workspace/
env|grep -i firebase
make local-run 
firebase
firebase project:list
firebase projects:list
code _workspace/firebase-admin-go/
make frontend-build frontend-bundle 
./
de
.devcontainer/post-create-cmd.sh 
cd .vscode-server/
cd data/
lc -a
du -sh ../*
du -sh CachedProfilesData/__default__profile__/*
cd ../..
echo $GOOGLE_CLOUD_PROJECT 
echo $GOOGLE_MAPS_API_KE
make backend-install backend-run 
git rm .vscode/launch.json 
git rm -f .vscode/launch.json 
make local-backend
sudo netstat -ntlup
ps aux|grep backend
kill 23558
kill -9 23558
make backend-build
docker run --rm -v /:$HOME/root -w $HOME/root -it cd2df bash
gitpush
make local-run
ls -lh local/firebase/data/*
ls -lh local/firebase/data/auth_export
ls -lh local/firebase/data/firebase-export-metadata.jso
make local-docker-compose-firebase-emulators-logs
git reset ad39f604e038f7f1c225e5c3415c845795e260d0
git reset 55805
lsof -i :4000
killall socat
git reset fs
.devcontainer/
chmod +x local/firebase/firebase-docker-start.sh 
ls -lha local/firebase/functions/auth
npm run serve
cp -r gcloud/infra/auth/ local/firebase/functions/
ls -lh gcloud/infra/auth/ local/firebase/functions/
ls -lh gcloud/infra/auth local/firebase/functions
ls -lh gcloud/infra local/firebase/
ls -lh gcloud/infra local/firebase
ls -lh gcloud/infra local/firebase/functions/
firebase version
firebase --version
npm uninstall -g firebase-tools
sudo npm uninstall -g firebase-tools
sudo install -g firebase-tools@13.14.2
sudo npm install -g firebase-tools@13.14.2
npm run start
cp -r auth/ _auth
//
npm install @google-gcloud/firestore@latest
npm uninstall @google-gcloud/firestore
npm uninstall google-gcloud/firestore
git checkout local/firebase/data
git checkout -b chit
git push --set-upstream origin chit bad
git push --set-upstream origin chit:bad
git reset 2349
git reset 5580
git reset origin/bad 
git checkout .
killall firebase
npm --help
npm docs firebase-functions@v5.1.0
npm docs firebase-function
npm help docs
npm uninstall firebase-admin
npm install firebase-admin@v12.3.1
node version
make node-modules-ci -j
make node-modules-ci 
make -j node-modules-ci
make -j node-modules-clean
make node-modules-ci
npm uninstall firebase-tools
npm install firebase-tools@v13.15.0
make gcloud/infra/auth-ci
make local-run r
make node-modules-c
rm -r frontend/node_modules/
npm install -g webpack
rm package-lock.json 
npm install webpack-cli
firbase --version
make firebase login
git reset origin/light 
git reset good
git add -f local/firebase/data
du -sh local/firebase/data*
du -sh local/firebase/data/*
env|grep -i emulator
env |grep -i emulator
FIREBASE_AUTH_EMULATOR_HOST=localhost:9099
FIRESTORE_EMULATOR_HOST=http://mocalhost:8090
FIRESTORE_EMULATOR_HOST=localhost:8090
killall java
env |grep -i cred
env |grep -i proj
export GOOGLE_CLOUD_PROJECT_ID=utrade-taxi-run-0
killall node
npm install firebase-tools@v13.15.4
make frontend-ci 
ls gcloud/infra/auth/
npm install firebase-admin@v12.4.0
npm build
npm run build
npm install firebase-admin@latest
npm install firebase-tools@latest
npm install firebase-functions@latest
npm install -g npm-check-updates
cd ../../local/firebase/functions/
cd auth
env|grep -i proj
env|grep -i front
env|grep -i google
GOOGLE_CLOUD_CREDENTIALS=`pwd`/gcloud/google-cloud-credentials make backend-run 
echo $GOOGLE_CLOUD_PROJECT_ID
export GOOGLE_CLOUD_PROJECT_ID=$GOOGLE_CLOUD_PROJECT 
echo $UI_CONFIG_FIREBASE_CONFIG 
echo $UI_CONFIG_GOOGLE_MAPS_API_KEY 
exho grep -i proj
echo grep -i proj
env| grep -i proj
unset FIREBASE_AUTH_EMULATOR_HOST
killall backend
node --trace-deprecation
make local-firebase-emulators-functions-serve 
ncu -v
which bash file mkdir rm which
sudo apt-get install -y file
sudo apt-get update -y && sudo apt-get upgrade -y;
sudo apt-get install -y curl git unzip xz-utils zip libglu1-mesa
sudo apt-get install     libc6:amd64 libstdc++6:amd64     libbz2-1.0:amd64 libncurses5:amd64
docker pull thyrlian/android-studio
docker login
docker pull thyrlian/android-sdk:v3.5
docker pull thyrlian/android-sdk
VERSION=0.0.3 make builder-image application-image 
VERSION=0.0.3 make application-image 
VEESION=make application-image 
git push origin robusto:main 
echo $DISPLAY
ls -lh /tmp/.X11-unix/
sudo apt update && sudo apt upgrade -y
sudo apt install wget
wget https://redirector.gvt1.com/edgedl/android/studio/ide-zips/2024.1.1.12/android-studio-2024.1.1.12-linux.tar.gz
sudo mv android-studio /opt/
tar -xvf refactored-winner/android-studio-2020.3.1.25-linux.tar.gz
tar -xvf refactored-winner/android-studio-2024.1.1.12-linux.tar.gz android-studio/
tar -xvf android-studio-2024.1.1.12-linux.tar.gz android-studio/
cd /opt/android-studio/bin/
./studio.sh 
DISPLAY=:1 ./studio.sh 
DISPLAY=:0 ./studio.sh 
DISPLAY=:1 ./studio.sh -v
ls /tmp/.X11-unix/
/opt/android-studio/bin/studio.sh 
ping materiel.net
curl materiel.net
mkdir .flutter
tar xvf android-studio-2024.1.1.12-linux.tar.gz 
ls /tmp/.X11-unix/X0 
ls -lh /tmp/.X11-unix/X0 
sudo apt-get install xorg
ls -lh /tmp/
ls -lh /tmp/.X11-unix
ls -la /tmp/.X11-unix
ls -la /tmp
chmod 1777 /tmp/.X11-unix/
xhost +
sudo xhost +
ps -e | grep X
DISPLAY=host.docker.internal:0 ./studio.sh 
DISPLAY=host.docker.internal:10 ./studio.sh 
sudo apt-get install ssvnc
make local-docker-compose-vnc-android-studio-sh 
make local-docker-compose-vnc-android-studio-build-no-pull 
DISPLAY=:10.0 /opt/android-studio/bin/studio.sh 
DISPLAY=:0 /opt/android-studio/bin/studio.sh 
code /opt/android-studio/
sudo apt-get install xvfb
Xvfb :10 -ac &
DISPLAY=:10 /opt/android-studio/bin/studio.sh 
docker compose up android-studio
make local-docker-compose-vnc-android-studio-up 
[A[A
apt-get update && apt-get install -y     x11vnc     xvfb     wget     unzip
sudo apt-get update && sudo apt-get install -y     x11vnc     xvfb     wget     unzip
x11vnc -storepasswd 12456azert ./.vnc/passwd
mkdir .vnc
touch .vnc/passwd
x11vnc -storepasswd 12456azert .vnc/passwd
sudo apt-get update && sudo apt-get install -y     x11vnc     xvfb     wget     unzip xinit openbox xorg
xvfb-run --server-args="-screen 0 1024x768x24" x11vnc -forever -usepw -create 
x11vnc --help
x11vnc --help|more
x11vnc --help>hh
x11vnc --version
make local-docker-compose-vnc-android-studio-log
make local-docker-compose-vnc-android-studio-logs 
make local-docker-compose-vnc-android-studio-sh
x11vnc -h > hh
nc -z vnc-android-studio 5900
socat TCP-LISTEN:5009,fork,reuseaddr TCP:vnc-android-studio:5009&
socat TCP-LISTEN:5900,fork,reuseaddr TCP:vnc-android-studio:5900 &
make local-docker-compose-vnc-android-studio-up
nc localhost 5900
nc -z localhost 5900
nc host.docker.internal 5900
nc -z host.docker.internal 5900
make local-docker-compose-vnc-android-studio
code _workspace/codelabs/
flutter --version
cd firebase-get-to-know-flutter/step_02
flutter doctor -v
sudo chown -R $USER:$USER /opt/flutter
ls -al
ls -al .config/
cd /opt/flutter/
fing . | grep .dart_tool/package_config.json
find . | grep .dart_tool/package_config.json
ls -lha .dart_tool/package_config.json./packages/flutter_tools/.dart_tool/package_config.json
sudo ls -lha .dart_tool/package_config.json./packages/flutter_tools/.dart_tool/package_config.json
sudo ls -lha ./packages/flutter_tools/.dart_tool/package_config.json
sudo chown -R $USER:$USER packages/
ls -lha .
sudo chown -R $USER:$USER packages/flutter_tools/.dart_tool/package_config.json 
echo $USER
sudo chown -R devuser:devuser  packages/
sudo chown -R devuser:devuser  .
flutter doctor --android-licenses
env|grep -i android
echo $PATH
which sdkmanager
export ANDROID_HOME=/Users/<your_username>/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools
sudo flutter doctor --android-licenses
ls -lha `which sdkmanager`
sudo chown -R devuser:devuser /opt/android-sdk/
echo $ANDROID_HOME 
sdkmanager
sdkmanager --version
cd /opt/
cd android-sdk/
mkdir latest
mv cmdline-tools/ latest/
code step_03/
docker run --gpus all nvidia/cuda:12.6.0-base-ubuntu22.04 nvidia-smi
flutter devices
flutter emulators
flutter create tony
cd tony/ 
flutter run
Xvfb ${DISPLAY} -nolisten tcp -cc 4 -screen 0, ${MacBookAirRes}x24 &
bz
socat TCP-LISTEN:9100,fork,reuseaddr TCP:vnc-android-studio:9100 > /tmp/socat-vnc-android-studio-9100.log 2>&1 &
fg
socat TCP-LISTEN:45483,fork,reuseaddr TCP:vnc-android-studio:45483 > /tmp/socat-vnc-android-studio-45483.log 2>&1 
socat TCP-LISTEN:46483,fork,reuseaddr TCP:vnc-android-studio:46483 > /tmp/socat-vnc-android-studio-46483.log 2>&1 
flutter upgrade
make local-docker-compose-vnc-android-studio-up &
make -C .. local-docker-compose-firebase-emulators-up 
make -C .. local-docker-compose-vnc-android-studio-up 
. .bash
. .bashrc 
local
locale
xserver-start.sh 
cd _workspace/tony/
DISPLAY=:1 flutter run
ls -lha .cache/
./.devcontainer/post-create-cmd.sh 
du -sh .pub-cache/*
du -sh .pub-cache/
ls ..
code ../codelabs/google-maps-in-flutter/
cd ../step_5/
flutter create .
flutter doctor
DISPLAY=:1 google-chrome
git describe --abbrev=0 --tags
git tag v0.0.0
du -sh *
ls .local/
ls .local/ -a
ps el
ps aux | grep openbox
which openbox
openbox -h
openbox --help
cd final/
man
man ls
cd step_07/
cd web
DISPLAY=:1 flutter run -d chrome --web-port=8081
flutter run --help
cd _workspace/codelabs/firebase-auth-flutterfire-ui/
cd complete/
DISPLAY=:1 flutter run --dds-port=33456
flutter run -d chrome --web-port=8081
flutter init
flutter install
cd _workspace/flutter-codelabs/boring_to_beautiful/final/
killall dart
killall -9 dart
lsof -i :8081
sudo apt-get install -y net-tools
sudo lsof -i :8081
sudo apt-get install -y lsof
sudo netstat -tunlp
lsof -i :8081|awk '{printf" "$2}'
lsof -i :8081|awk '{print" "$2}'
kill `lsof -i :8081|awk '{print" "$2}'`
kill `lsof -i :8081|awk '{print" "$2}'|grep -v PID`
cd _workspace/codelabs/boring_to_beautiful/final/
flutter project
flutter -h
flutter run -d linux
flutter run -d linux|less
flutter channel stable
flutter clean
google-chrome
killall x11vnc
display-start.sh 
x11vnc --display :1
flutter run -d android
DISPLAY_RESOLUTION=800x600 make local-docker-compose-vnc-android-studio-up 
DISPLAY_RESOLUTION=1600x1200 make local-docker-compose-vnc-android-studio-up 
code _workspace/tony/
cd _workspace/codelabs/boring_to_beautiful/
make terraform-upgrade 
make builder-image application-image 
make local-builder-image-pull 
make local-builder-image-pull-latest 
which display-start.sh 
code `which display-start.sh`
