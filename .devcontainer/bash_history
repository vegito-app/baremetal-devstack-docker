git branch 
make frontend-node-modules 
make gcloud-auth-
make gcloud-auth-login 
VERSION=v0.0.1 make application-image terraform-plan 
make docker-login 
make terraform-init 
VERSION=v0.0.1 make terraform-plan 
gcloud config get-value project
make go-mod-tidy
make go-mod-vendor
gcloud iam service-accounts list 
make terraform-plan 
VERSION=v0.0.1 make application-image terraform-apply-auto-approve 
make terraform-import 
make terraform-refresh 
VERSION=v0.0.1 make terraform-apply-auto-approve 
VERSION=v0.0.1 make terraform-import 
VERSION=v0.0.1 make terraform-plan
make backend-run 
make backend-install 
make gcloud-auth-func-logs 
gcloud functions logs read projects/utrade-taxi-run-0/locations/us-central1/functions/utrade-us-central1-identity-platform-before-create
gcloud functions logs read projects/utrade-taxi-run-0/locations/us-central1/functions/utrade-us-central1-identity-platform-before-sign-in
gcloud functions logs read projects/utrade-taxi-run-0/locations/us-central1/functions/utrade-us-central1-identity-platform-before-signin
VERSION=v0.0.1 make terraform-refresh 
htop
make go-mod tidy
make go-mod-tidy 
BUILDER_VRSION=v0.0.0 VERSION=v0.0.3 make application-image terraform-plan terraform-apply-auto-approve 
make unlock-docker-sock 
BUILDER_VERSION=v0.0.0 VERSION=v0.0.3 make application-image terraform-plan terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.3 make application-image terraform-plan terraform-apply-auto-approve 
git tag -f s
git reset HEAD~1
git log
env|grep -i utrade
make local-image
make local-image-run 
gcloud functions list 
gcloud functions logs utrade-us-central1-identity-platform-before-create
gcloud functions logs read utrade-us-central1-identity-platform-before-create
gcloud functions logs read utrade-us-central1-identity-platform-before-sign-in
gcloud functions logs read utrade-us-central1-identity-platform-before-signin
gcloud functions logs read --start-time=2024-08-09 utrade-us-central1-identity-platform-before-signin
gcloud functions logs read --start-time=2024-08-09 utrade-us-central1-identity-platform-before-create
gcloud iam service-accounts describe firebase-adminsdk-vxdj8@utrade-taxi-run-0.iam.gserviceaccount.com 
gcloud functions logs read --execution-id=vbwic0ky3ehm utrade-us-central1-identity-platform-before-create
gcloud functions logs read --execution-id=vbwic0ky3ehm --min-log-level=debug utrade-us-central1-identity-platform-before-create
gcloud functions logs read --execution-id=vbwic0ky3ehm --min-log-level=infoutrade-us-central1-identity-platform-before-create
gcloud functions logs read --execution-id=vbwic0ky3ehm  --verbosity=debug utrade-us-central1-identity-platform-before-create
gcloud functions logs read --execution-id=vbwic0ky3ehm  --verbosity=debug utrade-us-central1-identity-platform-before-create --format=json
gcloud functions logs read --execution-id=vbwic0ky3ehm  --verbosity=debug utrade-us-central1-identity-platform-before-create 
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-create 
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-signin 
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-signin --user-output-enabled 
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-signin --help 
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-signin --format=
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-create --format=json
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-signin --format= --start-time="2024-08-10 06:15:01.128"
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-signin --format= --start-time="2024-08-10 06:10:01.128"
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-signin --format=json --start-time="2024-08-10 06:10:01.128"
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-signin --format=json --start-
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-create --format=json --start-time="2024-08-10 06:10:01.128"
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-create --format=json --start-time="2024-08-10"
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-create --desc
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-create --order=desc
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-create
gcloud functions logs read  --verbosity=debug utrade-us-central1-identity-platform-before-create --freshness 10m
gcloud logging read "resource.type=cloud_function AND resource.labels.function_name=utrade-us-central1-identity-platform-before-create" --limit 50 --format json --order desc --freshness 10m 
gcloud logging read "resource.type=cloud_function AND resource.labels.function_name=utrade-us-central1-identity-platform-before-create" --limit 50  --order desc --freshness 10m 
gcloud logging read "resource.type=cloud_function AND resource.labels.function_name=utrade-us-central1-identity-platform-before-create" --limit 50  --order desc --freshness 20m 
gcloud logging read "resource.type=cloud_function AND resource.labels.function_name=utrade-us-central1-identity-platform-before-create" --limit 50 --format json --order desc --freshness 20m 
git,log
pwd
code ~/go/pkg/mod/firebase.google.com/go/v4\@v4.14.1/
gcloud iam  service-accounts list 
gcloud logging read "resource.type=cloud_function AND resource.labels.function_name=utrade-us-central1-identity-platform-before-create" --limit 50  --order desc 
gcloud logging read "resource.type=cloud_function AND resource.labels.function_name=utrade-us-central1-identity-platform-before-create" --limit 50  --order desc |more
BUILDER_VERSION=v0.0.0 VERSION=v0.0.2 make application-image terraform-plan terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.2 make application-image terraform-plan terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.1 make application-image terraform-plan terraform-apply-auto-approve 
ls
make builder-image
git reset s
rm -rf infra/gcloud/auth/firebase && cp -r firebase infra/gcloud/auth/firebase
rm -rf infra/gcloud/auth/firebase && cp -r backend/firebase infra/gcloud/auth/firebase
make go-mod-tidy go-mod-vendor
git add -f .devcontainer/vscode/userData/globalStorage/genieai.chatgpt-vscode/
ls .devcontainer/vscode/userData/
ls .devcontainer/vscode/userData/globalStorage/
du -sh .devcontainer/*
du -sh backend/vendor/
du -sh infra/gcloud/auth/*
make go-mod-vendor-rm 
echo $?
git add .devcontainer/bash_history 
git commit --amend --no-edit
git branch
git push origin codespace-verbose-spoon-97gvv6p7q7pf746:dev
git branch -a
git fetch -a
git rebase -i origin/codespace-stunning-couscous-jjp66rxj4992jg6w 
git rebase -i origin/codespace-verbose-spoon-97gvv6p7q7pf746 
git fetch -p
git push origin :codespace-stunning-couscous-jjp66rxj4992jg6w 
git push origin :codespace-verbose-spoon-97gvv6p7q7pf746 
git checkout dev
git pull --rebase
git rebase --continu
git rebase origin/dev 
git rebase --continue 
git rebase --edit-todo 
git push 
git rebase origin/codespace-verbose-spoon-97gvv6p7q7pf746 
git branch -d codespace-verbose-spoon-97gvv6p7q7pf746  
code .devcontainer/gopath/pkg/mod/firebase.google.com/go/v4@v4.14.1/
env |grep -i firebase
env |grep -i utrade_firebase
env |grep -i maps
gcloud iam service-accounts list
echo $GOOGLE_CLOUD_CREDENTIALS |jq
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.2 make terraform-plan 
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.2 make terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.1 make terraform-apply-auto-approve 
gcloud logging read "resource.type=cloud_function AND resource.labels.function_name=utrade-us-central1-identity-platform-before-create" --limit 50  --freshness 2m --order desc |more
Bas
make frontend-start 
git push --set-upstream origin dev 
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.1 make terraform-pl@
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.1 make terraform-plan 
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.1 make terraform-import 
cd ..
make terraform-apply-auto-approve 
make go-mod)tidy
make go-od-vendor
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.2 make application-image terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.0 VERSION=v0.0.1 make application-image terraform-apply-auto-approve 
ake go-mod-tidy
cd infra/gcloud/auth/go/
go mod tidy
go mod vendor
cd -
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.2 make -C ../../..  builder-image  application-image terraform-apply-auto-approve 
make unl
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.2 make   builder-image  application-image terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 make application-image terraform-apply-auto-approve 
make backend-run
ls frontend/
ls frontend/*
ls -l frontend
make local-image-run
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.2 make application-image terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 make terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.2 make terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 make terraform-apply-auto-approve a
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 make application-image terraform-apply-auto-approve a
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.2 make terraform-apply-auto-approve a
mount
env|grep -i database
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 make terraform-apply-auto-approve
git fetch 
git origin -v
git remote -v
git  push origin master 
git checkout -b dev
git push --set-upstream origin dev v
sudo rm -rf .devcontainer/gopath/pkg/mod/github.com/7d4b9/
firebase --help
firebase list
firebase help
firebase firestore
gcloud firestore databases --list --tr
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 make terraform-plan 
gcloud firestore list
gcloud firestore database list
gcloud firestore databases list
gcloud firestore databases list --help
firebase project
firebaseinfo
firebase info
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 make terraform-import 
cd gcloud/
terraform import
terraform import google_firebase_database_instance utrade
terraform import google_firebase_database_instance.utrade
terraform import google_firebase_database_instance.utrade utrade-taxi-run-0-default-rtdb
terraform import module.infra.google_firebase_database_instance.utrade utrade-taxi-run-0-default-rtdb
terraform import google_firebase_database_instance.utrade module.infra.utrade-taxi-run-0-default-rtdb
gcloud firebase projects:list
gcloud firebase projects list
gcloud firebase 
make terraform-state-rm 
terraform state list
terraform -chdir ./cloud state list
terraform -chdir=./cloud state list
make terraform-state-list 
terraform state --help
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 make terraform-state-show 
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 make terraform-state-show-all 
make 
BUILDER_IMAGE_VERSION=v0.0.1 VERSION=v0.0.1 make module.secrets.google_identity_platform_default_supported_idp_config.google[0]-show 
BUILDER_IMAGE_VERSION=v0.0.2 VERSION=v0.0.1 make terraform-apply-auto-approve 
git clone https://github.com/7d4b9/firebase-admin-go.git
code firebase-admin-go/
BUILDER_IMAGE_VERSION=v0.0.2 VERSION=v0.0.2 make terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.2 VERSION=v0.0.0 make application-image terraform-apply-auto-approve 
BUILDER_IMAGE_VERSION=v0.0.2 VERSION=v0.0.0 make builder-image application-image terraform-apply-auto-approve 
npm install
BUILDER_IMAGE_VERSION=v0.0.2 VERSION=v0.0.1 make application-image terraform-apply-auto-approve 
npm start
nodejs --version
node --version
BUILDER_IMAGE_VERSION=v0.0.2 VERSION=v0.0.0 make terraform-plan 
BUILDER_IMAGE_VERSION=v0.0.2 VERSION=v0.0.0 make terraform-apply-auto-approve 
cd infra/gcloud/auth/
sudo npm install -g npm-check-updates
ncu -u
rm -r node_modules/ package-lock.json 
npm i
npm i @google-gcloud/firestore
npm i @grpc/grpc-js
npm update
terraform init --upgrade
BUILDER_IMAGE_VERSION=v0.0.2 VERSION=v0.0.1 make terraform-plan 
code ..
cd functions/
cd ../infra/gcloud/auth/
ln ../../../functions/index.js .
ln -h
ln
ln --help
ln -f ../../../functions/index.js .
commment faire pointer un front vers cett emulateur ?
make firebase-emulators-init 
make firebase-emulators-start 
make firebase-emulators-start
mv functions/ local/firebase/
cd local/firebase/
ln -s ../../../infra/gcloud/auth functions/auth
git add functions/auth
git status 
ls -a
ln -s ../../../infra/gcloud/auth auth
ln `pwd`/__auth auth
ln -s `pwd`/__auth auth
cd infra/auth/
cd local/firebase/functions/
ls -alh ../../../infra/gcloud/auth
ls -alh ../../../infra/gcloud/
ls -la
rm auth 
ls auth 
ls auth/*
ls -lha ../../../infra/gcloud/auth 
ls -lha ../../../infra/gcloud/
firebase init emulators
npm install -g firebase-tools
cd /workspaces/refactored-winner/
sudo npm install -g firebase-tools
firebase login
firebase emulators:start
uname -a
sudo apt-get install -y openjdk-11-jdk
sudo apt-get update
apt-get install -y software-properties-common
sudo apt-get install -y software-properties-common
sudp add-apt-repository ppa:openjdk-r/ppa
sudo add-apt-repository ppa:openjdk-r/ppa
sudo apt update
sudo apt search openjdk
apt-cache search openjdk
sudo apt-get install -y openjdk-17-jdk
make local-builder-image 
firebase init
ls -lh ..
ls -lh ../..
cd /var/lib/docker/codespacemount/workspace/refactored-winner/
ls -lha
ls -lh ../../..
cd /workspaces/refactored-winner/r
firebase init emulators --no-localhost
make firebase-emulators
firebase emulators init --help
firebase init emulators --help
firebase init functions
make firebase-emulators-docker-compose-up 
cd refactored-winner/
docker compose rm   firebase-emulators 
ls local/
ls local/firebase/
ls local/firebase/functions/
ls -al local/firebase/functions/
ln -s `pwd`/infra/gcloud/auth  local/firebase/functions/
docker system prune -f -a
git rebase 97gvv6p7q7pf746
git rebase origin/codespace-humble-meme-wrq66vwrr4wh5979 
gi tlog
cd local/firebase/functions
ls  /workspaces/refactored-winner/infra/gcloud/auth
make firebase-emulators-docker-compose-rm
make firebase-emulators-docker-compose
make firebase-emulators-docker-compose-rm 
make local-docker-firebase-emulators-
make local-docker-firebase-emulators-up
rm auth
curl localhost:4000
docker ps
make local-docker-firebase-emulators-up 
cat /etc/hosts
sudo apt-get update && apt-get install -y socat
sudo apt-get update && sudo apt-get install -y socat
socat TCP-LISTEN:4000,fork TCP:firebase-emulators:4000
curl firebase-emulators:4000
socat TCP-LISTEN:4000,fork TCP:172.18.0.2/16:4000
socat TCP-LISTEN:4000,fork TCP:172.18.0.2:4000
make firebase-docker-emulators-logs 
docker copose up --help
nc -z firebase 4000  && echo ok
socat TCP-LISTEN:4000,fork TCP:localhost:4000
socat TCP-LISTEN:4000,fork TCP:firebase-emulators4001
make firebase-emulators-docker-compose-up
git branch -d
git log --oneline 
git push --set-upstream origin codespace-humble-meme-wrq66vwrr4wh5979:dev
nc -z localhost 4000 && echo ok
nc -z firebase 4001 && echo ok
make go-local/proxy-mod-tidy 
nc -z firebase 4000 && echo ok
cd local/proxy/
go mod init github.com/7d4b9/utrade/local/proxy
who
whoami 
docker ps$
docker compose stop firebase-emulator
docker compose stop --help
docker compose down --help
docker compose rm --help
make firebase-docker-emulators-logs
docker compose logs --help
docker compose logs --follow firebase-emulator
docker compose logs  firebase-emulator
make firebase-docker-emulators-rm
make firebase-docker-emulators
bg
make firebase-docker-emulators-rm 
make firebase-emulators-docker-compose-stop 
docker ps -a
docker rm -f 19c38
sudo apt-get install netcat
sudo apt-get install -y netcat
sudo apt-get install -y netcat-openbsd
nc -h
nc -z firebase-emulators 4000
nc -z 172.18.0.2 4000
nc -z localhost 4000
nc -z firebase-emulator 4000
make firebase-emulators-docker-compose-logs 
nc -z firebas 5001
nc -z firebase 5001
make  local-builder-image 
nc -z 0.0.0.0 4000
make local-builder-image
ps aux
make firebase-emulators-install 
kill -INT 7
make firebase-emulators-docker-compose-build-no-pull 
ss -tulnp
ls -lha local/
ls -lha local/firebase/
ls -lha local/firebase/data/
make firebase-emulators-stop 
firebase emulators:help
firebase emulators --help
make firebase-emulators-docker-compose-b
make firebase-emulators-docker-compose-bash 
chmod o+rwx local/firebase/data/
netstat -tuln
sudo apt-get install -y netstat
sudo apt-get install net-tools
sudo netstat -tulnp
sudo apt install iproute2
sudo ss -tulnp
sudo su
sudo -i
lsof -i :4096
sudo apt-get install lsof
lsof -i :36305
socat TCP-LISTEN:4000,fork,reuseaddr TCP:localhost:4000
socat TCP-LISTEN:4000,fork,reuseaddr TCP:firebase-emulators:4000
docker images
git push
sudo apt-get install iptables -y
sudo iptables -t nat -A PREROUTING -p tcp --dport 4000 -j DNAT --to-destination 'firebase-emulators':8000
sudo iptables -t nat -A PREROUTING -p tcp --dport 4000 -j DNAT --to-destination 'firebase\-emulators':8000
sudo iptables -t nat -A PREROUTING -p tcp --dport 4000 -j DNAT --to-destination dd5e3ea010ea:8000
dig +short firebase-emulators
sudo apt-get install dig -y
ping
sudo apt-get install dnsutils
man dig
dig --help
test
test --help
ps aux|grep 4000
sudo iptables -t nat -A PREROUTING -p tcp --dport 4000 -j DNAT --to-destination `dig +short firebase-emulators`:4000
make firebase-emulators-docker-compose-bash
make local-build
make builder-image 
make application-frontend-npm-ci 
make frontend-build
make frontend-bundle 
cd frontend/
npm install firebaseui
npm install material-design-lite
npm install material-ui/core
rm /home/devuser/.ssh/known_hosts
npm install @material-ui/core
make frontend-build 
npm install @material-ui/core --save
npm install firebase
npm install @firebase @firebase/Auth
npm install @firebase @firebase/auth
npm install firebase @firebase/auth
npm install firebase @firebase/compat/auth
npm install firebase @firebase/compat
npm install firebase/compat
ls -alh
du -sh .*
du -sh .vscode-server/*
npm install material-design-lite --save
cd
code .
echo $HISTSIZE
. ~/.bashrc 
cat ~/.bashrc 
cd 
cat .bashrc 
make gcloud-auth-default-application-credentials 
docker images -a
docker run -v /:`pwd`/root --rm -it -w `pwd`/root 0bb51c6f07de bash
docker run -v /:`pwd`/root --rm --entrypoint bash -it -w `pwd`/root 0bb51c6f07de 
env|grep -i folder
make firebase-emulators-docker-compose-rm  local-builder-image firebase-emulators-docker-compose-up 
git rm dev-entrypoint.sh 
git rm -f dev-entrypoint.sh 
make firebase-emulators-docker-compose-rm firebase-emulators-docker-compose-up 
git push -f
git reset ad39
git push git push 
ps aux|grep socat
make terraform-validate 
make terraform-plan
git rm -f .env
git tag -l
git reset origin/dev 
unset GOOGLE_APPLICATION_CREDENTIALS
USER=devuser@115528929ec4 make terraform-plan
make terraform-init
echo $TF_VAR_GOOGLE_IDP_OAUTH_SECRET
gcloud secrets list 
gcloud secrets versions list 
gcloud secrets versions list utrade-us-central1-prod-google-maps-api-key
gcloud secrets versions access  utrade-us-central1-prod-google-maps-api-key 
gcloud secrets versions access --secret utrade-us-central1-prod-google-maps-api-key 1
gcloud secrets versions access --secret utrade-us-central1-firebase-config 1
gcloud secrets versions access --secret utrade-us-central1-firebase-config 1|jq
gcloud run list
gcloud run services list
gcloud logging logs list
gcloud logging read 
gcloud logging read --help
gcloud functions list
gcloud functions logs read utrade-us-central1-identity-platform-before-create --filter=jsonPayload
gcloud run services list 
gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=utrade AND jsonPayload"
gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=utrade"
gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=utrade AND textPayload"
gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=utrade"|grep -i jsonpayload
gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=utrade"|more
npm audit --fix
npm audit fix
gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=utrade --freshness 1m
gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=utrade" --freshness 1m
gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=utrade" --freshness 1m >ll
gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=utrade" --format  jsonpayload
env
git clone https://github.com/firebase/firebase-admin-go.git
mkdir _workspace
cd _workspace/
env|grep -i firebase
make local-run 
firebase
firebase project:list
firebase projects:list
code _workspace/firebase-admin-go/
make application-frontend-build application-frontend-bundle 
./
de
.devcontainer/post-create-cmd.sh 
cd .vscode-server/
cd data/
lc -a
du -sh ../*
du -sh CachedProfilesData/__default__profile__/*
cd ../..
echo $PROJECT_NAME 
echo $GOOGLE_MAPS_API_KE
make backend-install backend-run 
git rm .vscode/launch.json 
git rm -f .vscode/launch.json 
make local-backend
sudo netstat -ntlup
ps aux|grep backend
kill 23558
kill -9 23558
make backend-build
docker run --rm -v /:$HOME/root -w $HOME/root -it cd2df bash
gitpush
make local-run
ls -lh local/firebase/data/*
ls -lh local/firebase/data/auth_export
ls -lh local/firebase/data/firebase-export-metadata.jso
make firebase-emulators-docker-compose-logs
git reset ad39f604e038f7f1c225e5c3415c845795e260d0
git reset 55805
lsof -i :4000
killall socat
git reset fs
.devcontainer/
chmod +x local/firebase/firebase-start-docker.sh 
ls -lha local/firebase/functions/auth
npm run serve
cp -r infra/gcloud/auth/ local/firebase/functions/
ls -lh infra/gcloud/auth/ local/firebase/functions/
ls -lh infra/gcloud/auth local/firebase/functions
ls -lh infra/gcloud local/firebase/
ls -lh infra/gcloud local/firebase
ls -lh infra/gcloud local/firebase/functions/
firebase version
firebase --version
npm uninstall -g firebase-tools
sudo npm uninstall -g firebase-tools
sudo install -g firebase-tools@13.14.2
sudo npm install -g firebase-tools@13.14.2
npm run start
cp -r auth/ _auth
//
npm install @google-gcloud/firestore@latest
npm uninstall @google-gcloud/firestore
npm uninstall google-gcloud/firestore
git checkout local/firebase/data
git checkout -b chit
git push --set-upstream origin chit bad
git push --set-upstream origin chit:bad
git reset 2349
git reset 5580
git reset origin/bad 
git checkout .
killall firebase
npm --help
npm docs firebase-functions@v5.1.0
npm docs firebase-function
npm help docs
npm uninstall firebase-admin
npm install firebase-admin@v12.3.1
node version
make node-modules-ci -j
make node-modules-ci 
make -j node-modules-ci
make -j node-modules-clean
make node-modules-ci
npm uninstall firebase-tools
npm install firebase-tools@v13.15.0
make infra/gcloud/auth-ci
make local-run r
make node-modules-c
rm -r frontend/node_modules/
npm install -g webpack
rm package-lock.json 
npm install webpack-cli
firbase --version
make firebase login
git reset origin/light 
git reset good
git add -f local/firebase/data
du -sh local/firebase/data*
du -sh local/firebase/data/*
env|grep -i emulator
env |grep -i emulator
FIREBASE_AUTH_EMULATOR_HOST=localhost:9099
FIRESTORE_EMULATOR_HOST=http://mocalhost:8090
FIRESTORE_EMULATOR_HOST=localhost:8090
killall java
env |grep -i cred
env |grep -i proj
export GOOGLE_CLOUD_PROJECT_ID=utrade-taxi-run-0
killall node
npm install firebase-tools@v13.15.4
make frontend-ci 
ls infra/gcloud/auth/
npm install firebase-admin@v12.4.0
npm build
npm run build
npm install firebase-admin@latest
npm install firebase-tools@latest
npm install firebase-functions@latest
npm install -g npm-check-updates
cd ../../local/firebase/functions/
cd auth
env|grep -i proj
env|grep -i front
env|grep -i google
GOOGLE_CLOUD_CREDENTIALS=`pwd`/gcloud/google-cloud-credentials make backend-run 
echo $GOOGLE_CLOUD_PROJECT_ID
export GOOGLE_CLOUD_PROJECT_ID=$PROJECT_NAME 
echo $UI_CONFIG_FIREBASE_CONFIG 
exho grep -i proj
echo grep -i proj
env| grep -i proj
unset FIREBASE_AUTH_EMULATOR_HOST
killall backend
node --trace-deprecation
make firebase-emulators-functions-serve 
ncu -v
which bash file mkdir rm which
sudo apt-get install -y file
sudo apt-get update -y && sudo apt-get upgrade -y;
sudo apt-get install -y curl git unzip xz-utils zip libglu1-mesa
sudo apt-get install     libc6:amd64 libstdc++6:amd64     libbz2-1.0:amd64 libncurses5:amd64
docker pull thyrlian/android-studio
docker login
docker pull thyrlian/android-sdk:v3.5
docker pull thyrlian/android-sdk
VERSION=0.0.3 make builder-image application-image 
VERSION=0.0.3 make application-image 
VEESION=make application-image 
git push origin robusto:main 
echo $DISPLAY
ls -lh /tmp/.X11-unix/
sudo apt update && sudo apt upgrade -y
sudo apt install wget
wget https://redirector.gvt1.com/edgedl/android/studio/ide-zips/2024.1.1.12/android-studio-2024.1.1.12-linux.tar.gz
sudo mv android-studio /opt/
tar -xvf refactored-winner/android-studio-2020.3.1.25-linux.tar.gz
tar -xvf refactored-winner/android-studio-2024.1.1.12-linux.tar.gz android-studio/
tar -xvf android-studio-2024.1.1.12-linux.tar.gz android-studio/
cd /opt/android-studio/bin/
./studio.sh 
DISPLAY=:1 ./studio.sh 
DISPLAY=:0 ./studio.sh 
DISPLAY=:1 ./studio.sh -v
ls /tmp/.X11-unix/
/opt/android-studio/bin/studio.sh 
ping materiel.net
curl materiel.net
mkdir .flutter
tar xvf android-studio-2024.1.1.12-linux.tar.gz 
ls /tmp/.X11-unix/X0 
ls -lh /tmp/.X11-unix/X0 
sudo apt-get install xorg
ls -lh /tmp/
ls -lh /tmp/.X11-unix
ls -la /tmp/.X11-unix
ls -la /tmp
chmod 1777 /tmp/.X11-unix/
xhost +
sudo xhost +
ps -e | grep X
DISPLAY=host.docker.internal:0 ./studio.sh 
DISPLAY=host.docker.internal:10 ./studio.sh 
sudo apt-get install ssvnc
make local-android-studio-docker-compose-sh 
make local-android-studio-docker-compose-build-no-pull 
DISPLAY=:10.0 /opt/android-studio/bin/studio.sh 
DISPLAY=:0 /opt/android-studio/bin/studio.sh 
code /opt/android-studio/
sudo apt-get install xvfb
Xvfb :10 -ac &
DISPLAY=:10 /opt/android-studio/bin/studio.sh 
docker compose up android-studio
make local-android-studio-docker-compose-up 
[A[A
apt-get update && apt-get install -y     x11vnc     xvfb     wget     unzip
sudo apt-get update && sudo apt-get install -y     x11vnc     xvfb     wget     unzip
x11vnc -storepasswd 12456azert ./.vnc/passwd
mkdir .vnc
touch .vnc/passwd
x11vnc -storepasswd 12456azert .vnc/passwd
sudo apt-get update && sudo apt-get install -y     x11vnc     xvfb     wget     unzip xinit openbox xorg
xvfb-run --server-args="-screen 0 1024x768x24" x11vnc -forever -usepw -create 
x11vnc --help
x11vnc --help|more
x11vnc --help>hh
x11vnc --version
make local-android-studio-docker-compose-log
make local-android-studio-docker-compose-logs 
make local-android-studio-docker-compose-sh
x11vnc -h > hh
nc -z android-studio 5900
socat TCP-LISTEN:5009,fork,reuseaddr TCP:android-studio:5009&
socat TCP-LISTEN:5900,fork,reuseaddr TCP:android-studio:5900 &
make local-android-studio-docker-compose-up
nc localhost 5900
nc -z localhost 5900
nc host.docker.internal 5900
nc -z host.docker.internal 5900
make local-android-studio-docker-compose
code _workspace/codelabs/
flutter --version
cd firebase-get-to-know-flutter/step_02
flutter doctor -v
sudo chown -R $USER:$USER /opt/flutter
ls -al
ls -al .config/
cd /opt/flutter/
fing . | grep .dart_tool/package_config.json
find . | grep .dart_tool/package_config.json
ls -lha .dart_tool/package_config.json./packages/flutter_tools/.dart_tool/package_config.json
sudo ls -lha .dart_tool/package_config.json./packages/flutter_tools/.dart_tool/package_config.json
sudo ls -lha ./packages/flutter_tools/.dart_tool/package_config.json
sudo chown -R $USER:$USER packages/
ls -lha .
sudo chown -R $USER:$USER packages/flutter_tools/.dart_tool/package_config.json 
echo $USER
sudo chown -R devuser:devuser  packages/
sudo chown -R devuser:devuser  .
flutter doctor --android-licenses
env|grep -i android
echo $PATH
which sdkmanager
export ANDROID_HOME=/Users/<your_username>/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools
sudo flutter doctor --android-licenses
ls -lha `which sdkmanager`
sudo chown -R devuser:devuser /opt/android-sdk/
echo $ANDROID_HOME 
sdkmanager
sdkmanager --version
cd /opt/
cd android-sdk/
mkdir latest
mv cmdline-tools/ latest/
code step_03/
docker run --gpus all nvidia/cuda:12.6.0-base-ubuntu22.04 nvidia-smi
flutter devices
flutter emulators
flutter create tony
cd tony/ 
flutter run
Xvfb ${DISPLAY} -nolisten tcp -cc 4 -screen 0, ${MacBookAirRes}x24 &
bz
socat TCP-LISTEN:9100,fork,reuseaddr TCP:android-studio:9100 > /tmp/socat-android-studio-9100.log 2>&1 &
fg
socat TCP-LISTEN:45483,fork,reuseaddr TCP:android-studio:45483 > /tmp/socat-android-studio-45483.log 2>&1 
socat TCP-LISTEN:46483,fork,reuseaddr TCP:android-studio:46483 > /tmp/socat-android-studio-46483.log 2>&1 
flutter upgrade
make local-android-studio-docker-compose-up &
make -C .. firebase-emulators-docker-compose-up 
make -C .. local-android-studio-docker-compose-up 
. .bash
. .bashrc 
local
locale
xserver-start.sh 
cd _workspace/tony/
DISPLAY=:1 flutter run
ls -lha .cache/
./.devcontainer/post-create-cmd.sh 
du -sh .pub-cache/*
du -sh .pub-cache/
ls ..
code ../codelabs/google-maps-in-flutter/
cd ../step_5/
flutter create .
flutter doctor
DISPLAY=:1 google-chrome
git describe --abbrev=0 --tags
git tag v0.0.0
du -sh *
ls .local/
ls .local/ -a
ps el
ps aux | grep openbox
which openbox
openbox -h
openbox --help
cd final/
man
man ls
cd step_07/
cd web
DISPLAY=:1 flutter run -d chrome --web-port=8081
flutter run --help
cd _workspace/codelabs/firebase-auth-flutterfire-ui/
cd complete/
DISPLAY=:1 flutter run --dds-port=33456
flutter run -d chrome --web-port=8081
flutter init
flutter install
cd _workspace/flutter-codelabs/boring_to_beautiful/final/
killall dart
killall -9 dart
lsof -i :8081
sudo apt-get install -y net-tools
sudo lsof -i :8081
sudo apt-get install -y lsof
sudo netstat -tunlp
lsof -i :8081|awk '{printf" "$2}'
lsof -i :8081|awk '{print" "$2}'
kill `lsof -i :8081|awk '{print" "$2}'`
kill `lsof -i :8081|awk '{print" "$2}'|grep -v PID`
cd _workspace/codelabs/boring_to_beautiful/final/
flutter project
flutter -h
flutter run -d linux
flutter run -d linux|less
flutter channel stable
flutter clean
google-chrome
killall x11vnc
display-start.sh 
x11vnc --display :1
flutter run -d android
DISPLAY_RESOLUTION=800x600 make local-android-studio-docker-compose-up 
DISPLAY_RESOLUTION=1600x1200 make local-android-studio-docker-compose-up 
code _workspace/tony/
cd _workspace/codelabs/boring_to_beautiful/
make terraform-upgrade 
make builder-image application-image 
make local-builder-image-pull 
make local-builder-image-pull-latest 
which display-start.sh 
code `which display-start.sh`
ln -sh ../../../infra/gcloud/auth local/firebase/functions/auth 
ln -sf ../../../infra/gcloud/auth local/firebase/functions/auth 
git reset origin/main 
git push -f 
igt log
git push -f origin robusto:main 
git checkout main 
git pull --rebase 
git rm -rf firebase-export-172475*
chmod +xlocal/firebase/firebase-start-docker.sh
chmod +x local/firebase/firebase-start-docker.sh
git rm -f .devcontainer/vscode/userData/globalStorage/redhat.vscode-yaml/*
git rm -f .devcontainer/vscode/userData/globalStorage/redhat.vscode-yaml/schemas_cache/*
git rm -f .devcontainer/vscode/userData/globalStorage/redhat.vscode-yaml/
git rm -rf .devcontainer/vscode/userData/globalStorage/redhat.vscode-yaml/
git rebase -i origin/main 
git rebase --edit-todo
mv .devcontainer/vscode/userData/globalStorage/dart-code.dart-code/package_cache.json .devcontainer/vscode/userData/globalStorage/dart-code.dart-code/package_cache_backup.json
rm .devcontainer/vscode/userData/globalStorage/dart-code.dart-code/package_cache.json
git reset origin/robusto 
test -h
man test
git add .
git show
git add android-studio/studio-entrypoint.sh 
chmod +x android-studio/android-start-docker.sh 
make local-android-studio-docker-compose-rm
chmod +x android-studio/studio-entrypoint.sh 
make github-runner
code /workspaces/refactored-winner/
git push origin HEAD:dev
git push -f origin HEAD:dev
chmod +x local/*.sh
chmod +x local/*/*.sh
make github-runner-image
make builder-image-local 
netstat -ntlu
make local-backend-image-run 
ls /runner/_work/refactored-winner/refactored-winner/infra/gcloud-credentials
make github-runner-rm 
make github-runner-stack
GITHUB_ACTIONS_RUNNER_STACK_ID=make github-runner-stack-rm 
GITHUB_ACTIONS_RUNNER_STACK_ID=13568 make github-runner-stack-rm 
GITHUB_ACTIONS_RUNNER_STACK_ID=13568 make github-runner-stack
unset GITHUB_ACTION_RUNNER_TOKEN 
make github-runner-image-push 
make github-runner-rm
make github-runner-image-@
make firebase-emulators-image
make firebase-emulators-image-push 
make local-android-studio-image
make local-android-studio-image-push 
make backend-image-run 
GITHUB_ACTIONS_RUNNER_STACK_ID=22288 make github-runner-stack-rm
git push -f origin HEAD:main 
git branch -d robusto 
git branch -D robusto 
git branch -D exp light chit
ls -lh .devcontainer/
ls -lh .
ls -lh .github/
ls -lh .github/workflows/
ls -lh .devcontainer/.github/
ls -lh .devcontainer/.github/workflow/
git rm -rf .devcontainer/.github/workflow/
git stash apply 
make local-images 
git rm -f vscode.code-workspace 
make run

make docker-login
env|grep -i work
env|grep -i run
make android-studio 
make firebase-emulators 
code /workspaces/refactored-winner
cd application/mobile/
du -sh docker-builder-local-cache/.devcontainer/post-create-cmd.sh 
docker rm --helpcd
ls -lha 
ls -lha go/
ls -lha go/pkg/
md go _go
mv go _go
ls -lha go/pkg/mod/
ls -lha go/pkg/mod/gopkg.in/
ls -lha go/pkg/mod/gopkg.in/yaml.v3@v3.0.1/
go version
which proxy
cd localproxy/
GOPATH=/tmp/go GOBIN=/home/devuser go install .
which localproxy
ls /usr/local/bin/flutter pub get
make application-mobile-flutter-pub-get 
make -C ../.. application-mobile-flutter-pub-get 
make images-ci 
git rebase -i origin/main~4
git stash 
make docker-multi-arch-images
make local-multi-arch-builder-image 
make images
git commit --amend
git reset origin/main~1 
make local-github-runner-image
make local-github-runner-docker-compose-rm 
make local-github-runner-docker-compose-up
qgit log
tree --help
sudo apt-get install tree
tree -l 4
tree -l 4 .
tree -l 2 .
tree -l 1 .
tree -L 1 .
tree -L 2 .
tree -L 3 .
tree -L 3 . > TL
git checkout dev 
git rebase --con
git rebase --abort
git merge origin/main 
git merge --continue 
env |grep -i android
studio.sh 
code application/mobile/
code --add-docker-token $(gcloud auth print-access-token)
make node-modules
make application-frontend-bundle 
make application-frontend-build
make application-backend-docker-compose-up 
.devcontainer/post-start-cmd.sh make local-android-studio-docker-compose-up 
cd /usr/local/
cd bin/
chmod +x android-studio/caches-refresh.sh 
ls .local/share/Google/AndroidStudio2024.1/
flutter pub get
flutter pub get .
flutter pub --help
make gcloud-apikeys-list 
code firebase-auth-flutterfire-ui/
mv local/.env local/_.env 
git rm -f local/.env 
mv local/_.env local/.env 
git commit --amend --no-edit git log
git reset savmake application-ios-config-plist 
make firebase-ios-config-plist 
make application-ios-config-plist 
make firebase-android-config-json 
make application-android-config-js
make application-android-config-json 
make terraform-output 
make terraform-state-show-all >all
gcloud alpha services api-keys list
gcloud alpha services api-keys  describe projects/402960374845/locations/global/keys/6fa64c54-f5b3-45c4-b6a8-8c2ee2a84617
gcloud alpha services api-keys delete projects/402960374845/locations/global/keys/6fa64c54-f5b3-45c4-b6a8-8c2ee2a84617gcloud secrets list 
gcloud secrets  describe utrade-us-central1-prod-google-maps-api-key
make application-backend-run 
make application-backend-docker-compose-rm 
make terraform-plan terraform-apply-auto-approve 
gcloud alpha services api-keys describe projects/402960374845/locations/global/keys/web-google-maps-api-key
gcloud alpha services api-keys undelete projects/402960374845/locations/global/keys/web-google-maps-api-key
make terraform-taint-backend 
make application-backend-image
make application-backend-docker-compose-rm
make application-backend-docker-compose-up
docker pull us-central1-docker.pkg.dev/utrade-taxi-run-0/docker-repository/utrade@sha256:3d711bf7f281e1a21c2bc210c356c5505012381e2fe31766e25f761435c4ea70
docker pull c3db6e7e8dd7
docker image info c3db6e7e8dd7
docker image inspect c3db6e7e8dd7
docker image inspect us-central1-docker.pkg.dev/utrade-taxi-run-0/docker-repository/utrade:backend-latest
docker pull us-central1-docker.pkg.dev/utrade-taxi-run-0/docker-repository/utrade:backend-latest
docker pull us-central1-docker.pkg.dev/utrade-taxi-run-0/docker-repository/utrade:backend-v0.0.4-1-gd48918d
git pull us-central1-docker.pkg.dev/utrade-taxi-run-0/docker-repository/utrade@sha256:3d711bf7f281e1a21c2bc210c356c5505012381e2fe31766e25f761435c4ea70
docker images|gred 526
docker images|grep 526
git describe --tags --abbrev=7 --match "v*"
update-ca-certificates 
sudo update-ca-certificates 
make application-backend-image terraform-taint-backend terraform-plan terraform-apply-auto-approve 
make application-backend-docker-compose
ap
PORT=8899 make local-run make docker-login 
gcloud secrets versions describe projects/402960374845/secrets/utrade-us-central1-firebase-config/versions/1
gcloud secrets versions access projects/402960374845/secrets/utrade-us-central1-firebase-config/versions/1
gcloud secrets versions access projects/402960374845/secrets/firebase-adminsdk-service-account-key/versions/1
gcloud secrets versions access projects/402960374845/secrets/utrade-us-central1-prod-google-maps-api-key/versions/1
gcloud alpha services api-keys lookup projects/402960374845/locations/global/keys/web-google-maps-api-key
make docker-lo
git log 
env|grep -i cred
echo $GOOGLE_CLOUD_CREDENTIALS 
echo 
code infra/mv infra/gcloud/secrets/ infra/secrets
code infra/
make -C .. terraform-state-rm 
make terraform-state-list |grep -i idp
make terraform-state-list >li
make terraform-secrets-init 
make terraform-secrets-import 
gcloud secrets describe prod-google-idp-oauth-key
make terraform-secrets-refresh 
make terraform-secrets-plan 
terraform 
terraform vers
make terraform-secrets-apply-auto-approve 
make terraform-secrets-state-list 
make terraform-secrets-state-show-all 
make terraform-secrets-output 
make terraform-destroy 
make terraform-state-list |grep state
make google_storage_bucket.bucket_tf_state-show 
make google_storage_bucket.bucket_tf_state_eu-rm 
make terraform-state-list |grep -i statemake terraform-plan 
LOCK_ID=1728675515465973 make terraform-unlock 
make terraform-state-list > li
make google_storage_bucket.bucket_tf_state-show
make terraform-PL
make terraform-iniT
make google_project.utrade-rm 
make terraform-state-show
make terraform-state-show-all 
make gclo
make terraform-state-show-all
gcloud auth list 
cd infra/
tar cf gcloud.tar gcloud
ENV_TERRAFORM_ROOT_MODULE=$(pwd)/infra make google_
ENV_TERRAFORM_ROOT_MODULE=$(pwd)/infra make  module.infra.google_firebase_android_app.android_app-show 
ENV_TERRAFORM_ROOT_MODULE=$(pwd)/infra make  module.infra.google_firebase_apple_app.ios_app--show 
ENV_TERRAFORM_ROOT_MODULE=$(pwd)/infra make  module.infra.google_firebase_apple_app.ios_app-show 
git commit --amend --no-edit 
GOOGLE_APPLICATION_CREDENTIALS=~/.config/gcloud/application_default_credentials.json make terraform-refresh 
make terraform-apply-auto-approve >abcd
make terraform-plan 2>&1 >abcd
make terraform-apply-auto-approve 2>&1 >abcdz
make terraform-apply-auto-approve >abcdz 2>&1
make gcloud-root-admin-storage-admin make application/frontend-node-modules application-frontend-npm-ci
git pull
make application-backend-image-pushcode ../../../todo 
make google-application-credentials 
git reset wip
git reset wip --
git reset origin/wip --
git reset origin/feature/signin-in-mobile 
git reset origin/dev
make terraform-apply-auto-approve |more
make terraform-plan >/dev/null |more
make terraform-apply-auto-approve >/dev/null 2> todo
code infra/environments/prod/
gcloud artifacts repositories list
firebase android
firebase android_app
firebase android:app
make  terraform-import 
firebase projects list
firebase firebase:list
firebase database:list
firebase databases:list
firebase database:get
firebase database:get *
firebase database:get --help
gcloud artifacts repositories describe docker-repository-public
gcloud artifacts repository describe docker-repository-public
make terraform-plan |more
make terraform-apply-auto-approve \more
make terraform-apply-auto-approve 2> bordel
make gcloud-apikeys-list |grep name
make  terraform-refresh 
gcloud functions describe moov-438615-europe-west1-identity-platform-before-signin
gcloud functions describe moov-438615-europe-west1-identity-platform-before-create
gcloud run services get-iam-policy moov-438615-europe-west1-identity-platform-before-signin
`gcloud config set run/region europe-west1`
gcloud run services get-iam-policy moov-438615-europe-west1-identity-platform-before-signin 
`gcloud config set run/region eus-central1`
gcloud run services get-iam-policy moov-438615-us-central1-identity-platform-before-signin 
gcloud run services get-iam-policy locations/europe-west1/namespaces/moov-438615/services/prod-moov-438615-europe-west1-application-backend
gcloud run services get-iam-policy locations/europe-west1/namespaces/moov-438615/services/prod-moov-438615-europe-west1-application-backendk
`gcloud config set run/region us-central1`
gcloud run services get-iam-policy prod-moov-438615-europe-west1-application-backend --location=europe-west1 --platform=managed
gcloud run services get-iam-policy prod-moov-438615-europe-west1-application-backend  --platform=managed
make application-backend-image-push
make  -C .. terraform-import 
make  -C .. terraform-plan 
firebase application:android
firebase -h
firebase apphosting:backends:list
firebase --project moov-438615 apphosting:backends:list
firebase --project moov-438615  remoteconfig:versions:list
make  -C .. terraform-apply-auto-approve 
gcloud iam service-accounts describe serviceAccount:prod-firebase-admin-sa@moov-438615.iam.gserviceaccount.com
gcloud iam service-accounts describe prod-firebase-admin-sa@moov-438615.iam.gserviceaccount.com
gcloud storage buckets list 
gcloud storage buckets describe moov-438615-europe-west1-public-images-web
gcloud storage buckets describe gs://moov-438615-europe-west1-public-images-web/
gcloud iam policies list
gcloud iam policies --kind serviceAccount list
gcloud iam policies list --kind serviceAccount
gcloud iam policies list --kind=serviceAccount
gcloud iam policies list --kind=permission
gcloud iam policies list --kind=permissions
gcloud iam policies list --kind=
make  -C .. terraform-refresh 
gcloud iam roles describe projects/moov-438615/roles/iam.serviceAccounts.actAs
gcloud iam roles describe roles/iam.serviceAccounts.actAs
gcloud iam roles describe iam.serviceAccounts.actAs
gcloud projects get-iam-policy moov-438615 --flatten="bindings[].members" --format='table(bindings.role)' --filter="bindings.members:serviceAccount:prod-firebase-admin-sa@moov-438615.iam.gserviceaccount.com"
make  -C .. gcloud-service-accounts-bindings-roles 
make  -C .. docker-login 
make  -C .. application-backend-image-push
make application-backend-image-pushgit fetch -p
cd  application/frontend/
make -C ../.. node-modules-clean 
make -C ../.. node-modules-npm-check-updates 
make -C ../.. node-modules-ci 
make -C ../.. application/frontend-node-modules application-frontend-npm-ci
npm uninstall react
npm uninstall @material-ui/core
npm update @material-ui/core
npm install react@17 react-dom@17
npm uninstall react react-dom @testing-library/react
make -C ../.. node-modules
npm install react@latest
make -C ../../ application-backend-image
make -C ../../ application-frontend-npm-ci 
make -C ../../ application/frontend-node-modules 
npm ci
npm uninstall typescript
npm install typescript@4.9.5 --save-dev
make -C ../../ application-frontend-bundle 
make -C ../../ node-modules
make -C ../../ node-modules-ci git branch git fetch -p
git checkout d48918d96cab628f8af6c8bf2a20a3e0300fa597 android-studio/docker-bake.hclmake terraform-init 
make terraform-taint-backend a
make terraform-reconfigure 
docker pull europe-west1-docker.pkg.dev/moov-438615/docker-repository-public/moov-438615:builder-latest
docker tag europe-west1-docker.pkg.dev/moov-438615/docker-repository-public/moov-438615:builder-latest builder-lates
gcloud run services 
gcloud run services li@
make terraform-state-list |grep -i rungit loggit fetch 
useradd -h
git describe --tags --abbrev=7
git reset v0.0.4 
got log
make local-builder-image-push 
VERSION=latest make terraform-apply-auto-approve 
VERSION=latest make terraform-plan 
VERSION=latest make terraform-plan terraform-apply-auto-approve 
make gcloud-secret-read-firebase-ui-config env|grep . -i utrade
gcloud auth login 
gcloud projects list 
gcloud config set project moov-438615
make gcloud-secret-read-firebase-ui-config 
gcloud secrets describe prod-firebase-web-config
gcloud secrets versions list projects/378762893981/secrets/prod-firebase-web-config
make gcloud-secret-read-firebase-ui-config
VERSION=latest make terraform-
make gcloud-prod-firebase-config-web-secret-show 
make gcloud-prod-firebase-adminsdk-service-account-key-secret-show 
make gcloud-prod-firebase-web-config-web-show 
make gcloud-prod-firebase-admin-sa-service-account-bindings-roles 
make gcloud-prod-google-idp-oauth-key-secret-show 
make gcloud-prod-google-maps-api-key-secret-show 
make gcloud-firebase-adminsdk-serviceaccount-roles-list 
make terraform-secrets-reconfigure 
make terraform-secrets-migrate-state 
mv infra/secrets/ .. secrets
mv infra/secrets/ ../secrets
mv ../secrets infra/
make terraform-refresh
gcloud secrets 
until [ 0 -ne $(git fetch -p | wc -l) ] ; do sleep 1; done
until [ 0 -ne $(git fetch -p | wc -l) ] ; do echo waiting updates...; sleep 1; done
time
date
until [ 0 -ne $(git fetch -p | wc -l) ] ; do echo waiting updates...; sleep 1; done ; date
git merge --continu
git rebase origin/tony 
git rebase -i origin/dev 
make terrafor-plan make terraform-plan 
make terraform-state-backup 
gcloud storage buckets list |grep -i name
make terraform-secrets-state-backup 
make terraform-migrate-state 
make module.gcloud.google_storage_bucket.bucket_tf_state_eu-rm 
make module.gcloud.google_storage_bucket.bucket_tf_state_eu_global-show 
git rebase -i 69cf31c78d144d13901127bbfb52d129b4b20be7
git tag -f f
git reset f
ifconfig
make terrafor-plan sudo apt-get install iftop
sudo iftop
ssh-add -L
make gcloud-
make google-application-credentialsmake local-android-studio-docker-compose-up 
du -sh .
make local-builder-image-ci 
watch df -h
echo $GOOGLE_APPLICATION_CREDENTIALSdu -sh `which backend`
ldd `which backend`make make application-backend-install
make application-backend-install
which backend
rm -rf application/backend/.docker-buildx-cache/
make application-backend-image-push-ci 
make application-backend-image-push```
`
rm `which backend`
make application-backend-install 
su - make application-backend-install 
su -
which backcend
ldd `which backend`
ls -lha /lib/x86_64-linux-gnu/libstdc++.so.6
ls -lha /lib/x86_64-linux-gnu/libm.so.6
ls -lha /lib/x86_64-linux-gnu/libgcc_s.so.1
ls -lha /lib/x86_64-linux-gnu/libc.so.6
ls -lh /lib64/ld-linux-x86-64.so.2
ls -lh /lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
make -C ../.. application-backend-image
make -C ../.. application-backend-image-push-ci 
make -C ../.. terraform-plan 
make -C ../.. terraform-apply-auto-approve 
make -C ../.. application-backend-image-pushmake images
make terraform-state-list >tony
make module.gcloud.google_identity_platform_config.moov-show 
make google_identity_platform_default_supported_idp_config.google-show git reset HEAD~1
make -C ../.. application-frontend-build 
make -C ../.. application-frontend-bundle 
make -C ../.. application-backend-docker-compose-rm 
make -C ../.. application-backend-docker-compose-up 
make -C ../.. docker-login 
make -C ../.. gcloud-prod-firebase-web-config-web-show 
make -C ../.. gcloud-prod-firebase-adminsdk-service-account-key-secret-show 
gcloud secrets version prod-firebase-config-secretlist 
gcloud secrets version list prod-firebase-config-web
gcloud secrets versions list prod-firebase-config-web
gcloud secrets describe prod-firebase-config-web
make -C ../.. module.gcloud.google_secret_manager_secret.firebase_config_web-show 
make -C ../.. gcloud-prod-google-idp-oauth-key-secret-shownev
socat TCP-LISTEN:5901,fork,reuseaddr TCP:android-studio:5900 > /tmp/socat-android-studio-5900.log 2>&1 &env
git tag -f t
maake y
make terraform-state-list |grep -i root
make terraform-state-list |grep -i admin
gcloud --project utrade-taxi-run-0 secrets list 
code minute
mv minute minute.json
APPLICATION_DEFAULT_CREDENTIALS=`pwd`/minute.json make terraform-plan 
APPLICATION_DEFAULT_CREDENTIALS=`pwd`/minute.json make terraform-init 
APPLICATION_DEFAULT_CREDENTIALS=`pwd`/minute.json make terraform-refresh 
cat minute.json 
export APPLICATION_DEFAULT_CREDENTIALS=`pwd`/minute.json 
unset GOOGLE_APPLICATION_CREDENTIALS 
df -hcd ..
gcloud iam service-accounts describe root-admin@moov-438615.iam.gserviceaccount.com
env|grep -E "=$"gcloud secrets list 
make module.gcloud.module.cdn.google_storage_bucket_object.public_web_background_image-rm
make module.gcloud.module.cdn.google_storage_bucket_iam_binding.web_public_image-rm module.gcloud.module.cdn.google_storage_bucket.public_images-rm module.gcloud.module.cdn.google_storage_bucket.public_images-rm module.gcloud.module.cdn.google_compute_url_map.url_map-rm module.gcloud.module.cdn.google_compute_target_http_proxy.public_cdn-rm module.gcloud.module.cdn.google_compute_global_forwarding_rule.public_cdn-rm  module.gcloud.module.cdn.google_compute_global_address.public_cdn-rm  module.gcloud.google_storage_bucket.bucket_tf_state_eu_global-rm 
make module.gcloud.module.cdn.google_compute_backend_bucket.public_cdn-rm 
git reset 2a094a8
git rset s
git tag -f bkp
git reset 3ca79badc5df185ba6248a0ff3e50916d1216a5c
git rebase --abort 
qit reset 90f20a6b567d9e2ab1169041ba6cf9b2ee54bf95
git reset 90f20a6b567d9e2ab1169041ba6cf9b2ee54bf95
git commit --amend 
make gcloud-images-list
make module.gcloud.google_artifact_registry_repository.public_docker_repository-show 
make module.gcloud.google_artifact_registry_repository.private_docker_repository-show 
make terraform-state-list > stlist
echo $CGO_ENABLED 
echo $CC
ulimite -a
ulimit -a
ulimit -h
ulimit --help
ulimit -v 30000
ulimit -v unlimited
ulimit -v 0
sudo ulimit -v 30000
sudo ulimit -v unlimited
sudo ulimit -v 
sudo ulimit
sudo ulimit -a
df -h
ulimit -l 30000
sudo ulimit -l 30000
cd application/backend/
GOARCH=arm64 go install
CC=clang CXX=clang++ GOARCH=arm64 go install
CC=clang CXX=clang++ GOARCH=arm64 GOOS=darwin go install
CC=clang CXX=clang++ GOARCH=aarch64 GOOS=darwin go install
CC=clang CXX=clang++ GOARCH=arm64/v7 GOOS=darwin go install
CC=clang CXX=clang++ GOARCH=arm64 GOOS=linux go install
CC=clang CXX=clang++ GOARCH=arm/v7 GOOS=linux go install
CC=clang CXX=clang++ GOARCH=arm64 GOOS=linux go install -a -ldflags "-linkmode external"
CC=g++ CXX=g++ GOARCH=arm64 GOOS=linux go install
CC=g++ CXX=g++ GOARCH=arm64 GOOS=linux go install -ldflags "-linkmode external"
CC=gcc CXX=gcc GOARCH=arm64 GOOS=linux go install -ldflags "-linkmode external"
CC=gcc CXX=g++ GOARCH=arm64 GOOS=linux go install -ldflags "-linkmode external"
CC=clang CXX=clang++ GOARCH=arm64 GOOS=linux go install -ldflags "-linkmode external"
sudo apt install gcc-aarch64-linux-gnu
CC=aarch64-linux-gnu-gcc CXX=aarch64-linux-gnu-g++ GOARCH=arm64 GOOS=linux go install -ldflags "-linkmode external"
sudo apt install gcc-aarch64-linux-gnu-gcc
sudo apt install g++-aarch64-linux-gnu
cd /usr/aarch64-linux-gnu/
ls bin/
aarch64-linux-gnu-gcc --version
aarch64-linux-gnu-g++ --version
s /usr/
ls /usr/
git reset  28ede65
git reset  bb50
git reset 28ede65
q
git tag -f good
vmstat 
sudo vmstat 
watch sudo vmstat 
git reset  9dec15b 
git reset good 
INFRA_ENV=dev make terraform-init 
INFRA_ENV=dev make terraform-plan make terraform-plan 
echo $BUILDER_IMAGE ip a
sudo iftop eth0
clear
sudo iftop -i eth0
docker logs -f 5fb349f88c53sudo iftop
``
export INFRA-ENV=staging
export INFRA_ENV=staging
echo $INFRA_ENV 
echo $env
unset INFRA_ENV 
GOOGLE_APPLICATION_CREDENTIALS=/workspaces/refactored-winner/infra/environments/prod/gcloud-credentials.json make e terraform-reconfigure 
GOOGLE_APPLICATION_CREDENTIALS=/workspaces/refactored-winner/infra/environments/prod/gcloud-credentials.json make terraform-reconfigure 
INFRA_ENV=dev make terraform-plan 
INFRA_ENV=prod make terraform-plan 
INFRE_ENV=prod make local-android-studio-docker-compose-up 
INFRA_ENV=prod make local-android-studio-docker-compose-up 
VERSION=latest INFRA_ENV=prod make local-android-studio-docker-compose-up 
INFRA_ENV=prod make local-android-studio-image-push 
INFRA_ENV=prod make local-builder-image-push 
docker pull europe-west1-docker.pkg.dev/moov-438615/docker-repository-public/moov-438615:android-studio-latest
make gcloud-serviceaccounts-list 
INFRA_ENV=prod make terraform-apply-auto-approve 
make gcloud-serviceaccount-roles 
INFRA_ENV=dev make gcloud-serviceaccount-roles 
INFRA_ENV=dev make terraform-apply-auto-approve 
ip a
git push origin wtf:dev
git branch -d wtf 
git push origin :wtf
make -C .. images-ci 
make -C .. images
ma
make gcloud-secret-prod-firebase-adminsdk-service-account-key-show 
make terraform-output-json make -C ../.. go-mod-upgrade 
INFRA_ENV=dev gcloud secrets list 
gcloud config get project
gcloud projects list
gcloud config set project moov-dev-439608
gcloud secrets describe firebase-adminsdk-service-account-key
gcloud secrets describe google-maps-api-key
gcloud secrets describe firebase-config-web
gcloud secrets versions list  firebase-config-web
gcloud secrets versions list  google-maps-api-key
INFRA_ENV=dev make local-android-studio-docker-compose-up 
INFRA_ENV=prod make terraform-upgrade 
INFRA_ENV=staging make terraform-upgrade 
INFRA_ENV=staging make terraform-plan 
make terraform-apply-auto-approve
gcloud functions describe moov-europe-west1-idp-before-create
gcloud functions describe moov-europe-west1-idp-before-signin
make terraform-upgrade-all
make application-backend-docker-compose-logs INFRA_ENV=dev make local-android-studio-docker-compose-up cd ..
INFRA_ENV=staging make terraform-secrets-init 
INFRA_ENV=staging make terraform-secrets-upgrade 
INFRA_ENV=prod make terraform-secrets-init 
INFRA_ENV=prod make terraform-secrets-migrate-state 
INFRA_ENV=prod make terraform-secrets-refresh 
INFRA_ENV=staging make terraform-secrets-plan 
INFRA_ENV=staging make terraform-secrets-apply-auto-approve 
INFRA_ENV=dev make terraform-secrets-init terraform-secrets-plan terraform-secrets-apply-auto-approve 
make terraform-secrets-upgrade terraform-secrets-plan terraform-secrets-apply-auto-approve 
make terraform-rotate 
make google_identity_platform_default_supported_idp_config.google-rm
gcloud projects add-iam-policy-binding moov-staging-440506   --member=serviceAccount:root-admin@moov-438615.iam.gserviceaccount.com --role=roles/owner
INFRA_ENV=staging make application-backend-image-push
INFRA_ENV=staging make docker-login application-backend-image-push
INFRA_ENV=staging make terraform-apply-auto-approve 
INFRA_ENV=staging make terraform-apply-auto-approve docker images|grep backend
docker images | grep backend
INFRA_ENV=staging VERSION=latest make terraform-plan terraform-apply-auto-approve 
LOCK_ID=1731153440082957 INFRA_ENV=staging VERSION=latest make terraform-unlock terraform-plan terraform-apply-auto-approve 
INFRA_ENV=staging  make terraform-plan terraform-apply-auto-approve 
INFRA_ENV=dev VERSION=latest make terraform-plan terraform-apply-auto-approve 
INFRA_ENV=dev VERSION=latest make terraform-plan
INFRA_ENV=dev VERSION=latest make terraform-apply-auto-approve 
INFRA_ENV=prod make terraform-plan terraform-apply-auto-approve 
INFRA_ENV=dev  make application-backend-image-push terraform-apply-auto-approve 
INFRA_ENV=dev  make terraform-plan terraform-apply-auto-approve cd ..
INFRA_ENV=staging make terraform-refresh 
INFRA_ENV=dev make terraform-refresh 
gcloud --project=moov-dev-439608 iam service-accounts keys create   /workspaces/refactored-winner/infra/environments/dev/gcloud-credentials.json   --iam-account=david-berichon-dev@moov-dev-439608.iam.gserviceaccount.com
gcloud config set project oov-dev-439608
export INFRA_ENV=dev
gcloud iam service-accounts list --project=moov-dev-439608
gcloud iam service-accounts keys list --project=moov-dev-439608 --iam-account=david-berichon-dev@moov-dev-439608.iam.gserviceaccount.com
for i in 7c8b6a217abb53a5c320b67cce701ddb40e26f33 2ae14480d8ad2a502646f5020784356d8b9e8e28 39d45ea74bf9989d8d5f6679b9a78ef607659fd9 f859cc41820ce7fa50da32633fcf7e3a6111ccb7 b0b16615dfd63a43afe68999fc07169db5a6f2da 5c04cfa59c33c0cbaed9b893798dfb89231ece56 b68775b48cde2d7fea4525c704b5e729447cb81f c1b00623707a54b855c0c4e76bfc3e730912f045 cbc5e65ebf412c67a27a3d751c4e5e8c50f1bc46 a2e3f414b34ca0c79ac373d3be74037dfe1942bc a9c06637d511b2057a0fb099fc0c81406edcf021  ; do gcloud iam service-accounts keys delete $i --project=moov-dev-439608 --iam-account=david-berichon-dev@moov-dev-439608.iam.gserviceaccount.com; 
for i in 7c8b6a217abb53a5c320b67cce701ddb40e26f33 2ae14480d8ad2a502646f5020784356d8b9e8e28 39d45ea74bf9989d8d5f6679b9a78ef607659fd9 f859cc41820ce7fa50da32633fcf7e3a6111ccb7 b0b16615dfd63a43afe68999fc07169db5a6f2da 5c04cfa59c33c0cbaed9b893798dfb89231ece56 b68775b48cde2d7fea4525c704b5e729447cb81f c1b00623707a54b855c0c4e76bfc3e730912f045 cbc5e65ebf412c67a27a3d751c4e5e8c50f1bc46 a2e3f414b34ca0c79ac373d3be74037dfe1942bc a9c06637d511b2057a0fb099fc0c81406edcf021  ; do gcloud iam service-accounts keys delete $i --project=moov-dev-439608 --iam-account=david-berichon-dev@moov-dev-439608.iam.gserviceaccount.com; done
VERSION=latest make -C .. local-android-studio-docker-compose-up 
VERSION=latest make local-android-studio-docker-compose-up make application-mobile-flutter-pub-get 
git stash --apply
git reset ts
git push -s
sudo htop
sudo iftop eno1
sudo iftop -i eno1
docker volumes ls
docker volume ls
docker volume inspect buildx_buildkit_moov-438615-builder0_state
VERSION=latest make local-android-studio-docker-compose-up 
git stash apply local/l
ps aux|grep -idebug
ps aux|grep -i debug
kill 1036479
curl localhost:8888/price
cd smartcontracts/book/
code ../..
chmod +x local/dockerd-entrypoint.sh 
chmod +x local/docker-entrypoint.sh 
make clarity-devnet-clean 
docker login --help
docker images | grep builder
docker rmicdffe
docker rmi cdffe
docker rmi -f cdffe
docker run --rm --entrypoint dockerd-entrypoint.sh cdffe1445ce3 cat
docker run -it  --rm --entrypoint dockerd-entrypoint.sh cdffe1445ce3 cat
docker run -i  --rm --entrypoint dockerd-entrypoint.sh cdffe1445ce3
docker run --privileged -i  --rm --entrypoint dockerd-entrypoint.sh cdffe1445ce3
docker run -i  --rm --entrypoint dockerd-entrypoint.sh 80887b791d42
lsmod | grep -E 'nf_tables|ip_tables|ip6_tables'
sudo apt-get install lsmod
docker run -it --cap-add NET_ADMIN  --rm --entrypoint dockerd-entrypoint.sh defd685e104c
docker run -it --cap-add NET_ADMIN -v /dev:/dev -v /lib/modules:/lib/modules --rm --entrypoint dockerd-entrypoint.sh defd685e104c
docker run -it --cap-add NET_ADMIN -v /dev:/dev -v /lib/modules:/lib/modules --rm --entrypoint dockerd-entrypoint.sh defd685e104c bash
docker run -it --privileged  --cap-add NET_ADMIN -v /dev:/dev -v /lib/modules:/lib/modules --rm --entrypoint dockerd-entrypoint.sh defd685e104c bash
docker run -it --privileged  --cap-add NET_ADMIN -v /dev:/dev -v /lib/modules:/lib/modules --rm --entrypoint dockerd-entrypoint.sh defd685e104c 
docker run --rm -d   --name dind-rootless   --privileged   --tmpfs /tmp   --tmpfs /run   -e DOCKER_DRIVER=overlay2   docker:dind-rootless
docker logs -f dind-rootless
docker run --rm   --name dind-rootless   --privileged   --tmpfs /tmp   --tmpfs /run   -e DOCKER_DRIVER=overlay2   docker:dind-rootless
docker run --rm it   --name dind-rootless   --privileged   --tmpfs /tmp   --tmpfs /run   -e HOME=/home/rootless   -e XDG_RUNTIME_DIR=/run/user/1000   -v /lib/modules:/lib/modules:ro   docker:dind-rootless sh -c "adduser --disabled-password --gecos '' rootless && \
                              chown -R rootless:rootless /home/rootless /run/user/1000 && \
                              su - rootless -c dockerd-rootless.sh"
docker run --rm -it   --name dind-rootless   --privileged   --tmpfs /tmp   --tmpfs /run   -e HOME=/home/rootless   -e XDG_RUNTIME_DIR=/run/user/1000   -v /lib/modules:/lib/modules:ro   docker:dind-rootless sh -c "adduser --disabled-password --gecos '' rootless && \
docker run --rm -it   --name dind-rootless   --privileged   --tmpfs /tmp   --tmpfs /run   -e HOME=/home/rootless   -e XDG_RUNTIME_DIR=/run/user/1000   -v /lib/modules:/lib/modules:ro   docker:dind-rootless sh -c "sudo adduser --disabled-password --gecos '' rootless && \
                              sudo chown -R rootless:rootless /home/rootless /run/user/1000 && \
docker run -it --privileged  --cap-add NET_ADMIN -v /dev:/dev -v /lib/modules:/lib/modules --rm --entrypoint dockerd-entrypoint.sh a4d4612679db  
docker run -it --privileged  --cap-add NET_ADMIN -v /dev:/dev -v /lib/modules:/lib/modules --rm --entrypoint dockerd-entrypoint.sh -v /etc/subuid:/etc/subuid:ro -v /etc/subgid:/etc/subgid:ro a4d4612679db  
docker run -it --privileged  --cap-add NET_ADMIN --cap-add SYS_ADMIN -v /dev:/dev -v /lib/modules:/lib/modules --rm --entrypoint dockerd-entrypoint.sh -v /etc/subuid:/etc/subuid:ro -v /etc/subgid:/etc/subgid:ro a4d4612679db  
docker run -it --privileged  --cap-add NET_ADMIN --cap-add SYS_ADMIN -v /dev:/dev -v /lib/modules:/lib/modules:ro --rm --entrypoint dockerd-entrypoint.sh -v /etc/subuid:/etc/subuid:ro -v /etc/subgid:/etc/subgid:ro a4d4612679db  
docker run -it --privileged  --cap-add NET_ADMIN --cap-add SYS_ADMIN -v /dev:/dev -v /lib/modules:/lib/modules:ro --rm --entrypoint dockerd-entrypoint.sh -v /etc/subuid:/etc/subuid:ro -v /etc/subgid:/etc/subgid:ro a
docker run -it --privileged  --cap-add NET_ADMIN --cap-add SYS_ADMIN -v /dev:/dev -v /lib/modules:/lib/modules:ro --rm --entrypoint dockerd-entrypoint.sh -v /etc/subuid:/etc/subuid:ro -v /etc/subgid:/etc/subgid:ro 4f8379a0bde5
clarinet --version
clarinet new counter
cd counter/
clarinet contract new counter
cd ../my-first-contract/
npm test
cd ../counter/
npx @hirosystems/clarinet-sdk
sudo chown -R $USER:$USER .
sudo chmod -R 777 .
make contracts-all 
clarinet --versio
make contracts-check 
clarinet --help
clarinet contracts --help
clarinet check --help
make contracts-compile 
docker images|grep builder
docker run --rm -d   --name dind-rootless   --privileged   --tmpfs /tmp   --tmpfs /run   -e HOME=/home/rootless   -e XDG_RUNTIME_DIR=/run/user/1000   -v /lib/modules:/lib/modules:ro   docker:dind-rootless sh -c "adduser --disabled-password --gecos '' rootless && \
docker run -it  --name dind-rootless   --privileged   --tmpfs /tmp   --tmpfs /run   -e HOME=/home/rootless   -e XDG_RUNTIME_DIR=/run/user/1000   -v /lib/modules:/lib/modules:ro   docker:dind-rootless sh -c "adduser --disabled-password --gecos '' rootless && \
docker run -it  --name dind-rootless -u root  --privileged   --tmpfs /tmp   --tmpfs /run   -e HOME=/home/rootless   -e XDG_RUNTIME_DIR=/run/user/1000   -v /lib/modules:/lib/modules:ro   docker:dind-rootless sh -c "adduser --disabled-password --gecos '' rootless && \
docker run -it --rm --name dind-rootless -u root  --privileged   --tmpfs /tmp   --tmpfs /run   -e HOME=/home/rootless   -e XDG_RUNTIME_DIR=/run/user/1000   -v /lib/modules:/lib/modules:ro   docker:dind-rootless sh -c "adduser --disabled-password --gecos '' rootless && \
docker run -it --name dind-rootless -u root  --privileged   --tmpfs /tmp   --tmpfs /run   -e HOME=/home/rootless   -e XDG_RUNTIME_DIR=/run/user/1000   -v /lib/modules:/lib/modules:ro   docker:dind-rootless sh -c "adduser --disabled-password --gecos '' rootless && \
docker run -d --rm  --name dind-rootless -u root  --privileged   --tmpfs /tmp   --tmpfs /run   -e HOME=/home/rootless   -e XDG_RUNTIME_DIR=/run/user/1000   -v /lib/modules:/lib/modules:ro   docker:dind-rootless sh -c "adduser --disabled-password --gecos '' rootless && \
docker run -d  --name dind-rootless -u root  --privileged   --tmpfs /tmp   --tmpfs /run   -e HOME=/home/rootless   -e XDG_RUNTIME_DIR=/run/user/1000   -v /lib/modules:/lib/modules:ro   docker:dind-rootless sh -c "adduser --disabled-password --gecos '' rootless && \
                              su - rootless -c dockerd-rootless.sh && bash"
docker run -it --rm --privileged docker:dind-rootless 
docker run -it --rm -e DOCKER_TLS_CERTDIR="" --privileged docker:dind-rootless 
docker run -it --rm -e DOCKERHOST_TLS_VERIFY --privileged docker:dind-rootless 
docker run -it --rm -e DOCKERHOST_TLS_VERIFY=false --privileged docker:dind-rootless 
docker run -it --rm -e DOCKER_TLS_VERIFY=false --privileged docker:dind-rootless 
docker run -it --rm -e DOCKER_TLS_VERIFY="" --privileged docker:dind-rootless 
docker run -it --rm --privileged -v$(pwd):$(pwd) -w $(pwd) docker:dind-rootless sh
docker images|grep -i builder
docker run -it --rm --privileged -v$(pwd):$(pwd) -w $(pwd) 4f8379a0bde5 sh
docker version
man trap
clrinet version
clarinet ver
clarinet version
clarinet integrate --help
make clarity-devnet-start 
docker run -it --rm   --privileged   --cap-add NET_ADMIN   --cap-add SYS_ADMIN   -v /dev:/dev   -v /lib/modules:/lib/modules:ro   -v /etc/subuid:/etc/subuid:ro   -v /etc/subgid:/etc/subgid:ro   -v $PWD:$PWD   -w $PWD   --entrypoint dockerd-entrypoint.sh   europe-west1-docker.pkg.dev/moov-dev-439608/docker-repository-public/moov-dev-439608:builder-latest bash
docker run -it --rm   --privileged   --cap-add NET_ADMIN   --cap-add SYS_ADMIN   -v /dev:/dev   -v /lib/modules:/lib/modules:ro -v $PWD:$PWD   -w $PWD   --entrypoint dockerd-entrypoint.sh   europe-west1-docker.pkg.dev/moov-dev-439608/docker-repository-public/moov-dev-439608:builder-latest bash
docker run -it --rm   --privileged   --cap-add NET_ADMIN   --cap-add SYS_ADMIN   -v /dev:/dev   -v /lib/modules:/lib/modules:ro -v $PWD:$PWD   -w $PWD   --entrypoint dockerd-entrypoint.sh   europe-west1-docker.pkg.dev/moov-dev-439608/docker-repository-public/moov-dev-439608:builder-latest 
env|grep -i 2375
docker info
sudo iftop rth0
sudo ifconfig
clarinet completion
clarinet completions bash --help
clarinet completions bash
. clarinet.bash 
clarinet devnet start 
export DOCKER_HOST=tcp://localhost:2375
unset DOCKER_HOST 
wget -O 'docker.tgz' https://download.docker.com/linux/static/stable/x86_64/docker-27.4.0.tgz
sudo    tar --extract     --file docker.tgz     --strip-components 1     --directory /usr/local/bin/     --no-same-owner     'docker/containerd'     'docker/docker'     'docker/dockerd'     'docker/runc'     'docker/containerd-shim-runc-v2' \
sudo    tar --extract     --file docker.tgz     --strip-components 1     --directory /usr/local/bin/     --no-same-owner     'docker/containerd'     'docker/docker'     'docker/dockerd'     'docker/runc'     'docker/containerd-shim-runc-v2' 
echo $DOCKER_HOST
export DOCKER_HOST=unix:///var/run/docker.sock
dockerd-entrypoint.sh 
docker exec -it clarinet-devnet bash
cd contracts/toto/counter/
clarinet devnet start
make clarity-devnet-rm
docker rm -f 7d8c
killall bash
killall sh
sudo killall sh
make clarity-devnet-rm 
nc -z localhost 2375 && echo ok
make clarinet-devnet-docker-compose-up 
make clarinet-devnet-docker-compose-rm
make clarinet-devnet-docker-compose-up
sudo lsof -i :18443
chmod +x contracts/clarinet-devnet-start.sh 
du -sh ~/.local/share/*
du -sh /var/lib/*
sudo du -sh /var/lib/docker
make clarinet-devnet-docker-compose-sh
jtop
make -C ../../.. clarinet-devnet-rm
make -C ../../.. clarinet-devnet-
docker network 
docker network rm -f counter.devnet
code /workspaces/refactored-winner/contracts/toto/counter/./.cache/stacks-devnet-1735019227
clarinet devnet stop
clarinet devnet --help
docker ps --filter name=bitcoin-node
docker ps --filter name=devnet
make -C ../../.. clarinet-devnet-docker-compose-sh 
docker context help
docker context help create
docker context create --help
$ docker context create my-context --description "Local Bitcoin Stacks" --docker "host=tcp//clarinet-devnet:2376"
$ docker context create my-context --description "Local Bitcoin Stacks" --docker "host=tcp://clarinet-devnet:2376"
docker context create my-context --description "Local Bitcoin Stacks" --docker "host=tcp://clarinet-devnet:2376"
docker context rm my-context
docker context create devnet --description "Local Bitcoin Stacks" --docker "host=tcp://clarinet-devnet:2376"
docker context ls
docker context use devnet
docker context use default
chmod +x ../../clarinet-devnet-start.sh 
chmod +x ../../../clarinet-devnet-start.sh 
make clarinet-devnet-up
docker log
make clarinet-devnet-docker-compose-up `clarinet version
make clarinet-devnet-docker-compose-rm 
unset DOCKER_HOST
make clarinet-devnet-docker-composecd .. && make clarinet-devnet-docker-compose-up
make local-builder-image-ci
make local-android-studio-image local-android-studio-docker-compose-up 
sudo iftop -i eth0 
sudo iftop -i lo 
ping -q host.docker.internal
sudo apt-get install ping
sudo apt-get install -y iputils-ping
ping -q materiel.net
#rm ~/.config/Google/AndroidStudio2024.
#rm ~/.config/Google/AndroidStudio2024.*
rm -rf ~/.config/Google/AndroidStudio2024.
cat /proc/sys/fs/inotify/max_user_watches
fs.inotify.max_user_watches=524288
sudo fs.inotify.max_user_watches=524288
alias
hiftop 
hhtop 
docker run --rm -it --privileged -v /:/host --network=host europe-west1-docker.pkg.dev/moov-dev-439608/docker-repository-public/moov-dev-439608:builder-latest sudo chroot /host /bin/bash
hi
base 64 --decode qHpeMciIr9B2UUm7HIz1Y0pwbIpcjBT7XngOmeaQMIY=
base64 --decode qHpeMciIr9B2UUm7HIz1Y0pwbIpcjBT7XngOmeaQMIY=
echo qHpeMciIr9B2UUm7HIz1Y0pwbIpcjBT7XngOmeaQMIY= | base64 --decode
echo qHpeMciIr9B2UUm7HIz1Y0pwbIpcjBT7XngOmeaQMIY= | base64 --decode|hex
echo qHpeMciIr9B2UUm7HIz1Y0pwbIpcjBT7XngOmeaQMIY= | base64 --decode|hexdump
eenv
en
hh
ailas
ocker run --rm -it --privileged -v /:/host --network=host europe-west1-docker.pkg.dev/moov-dev-439608/docker-repository-public/moov-dev-439608:builder-latest sudo chroot /host bash
docker run --rm -it --privileged -v /:/host --network=host europe-west1-docker.pkg.dev/moov-dev-439608/docker-repository-public/moov-dev-439608:builder-latest sudo chroot /host bash
make local-builder-image-push
make -C .. local-android-studio-image
make local-android-studio-docker-compose-rm 
make -C  local-android-studio-image
make local-android-studio-docker-compose-rm local-android-studio-docker-compose-up 
make -C .. local-android-studio-image-push 
docker run --rm -it europe-west1-docker.pkg.dev/moov-dev-439608/docker-repository-public/moov-dev-439608:android-studio-v0.0.14-5-g8a42e1a bash
docker pull europe-west1-docker.pkg.dev/moov-dev-439608/docker-repository-public/moov-dev-439608:android-studio-v0.0.14-5-g8a42e1a
docker rmi europe-west1-docker.pkg.dev/moov-dev-439608/docker-repository-public/moov-dev-439608:android-studio-v0.0.14-5-g8a42e1a
docker pull europe-west1-docker.pkg.dev/moov-dev-439608/docker-repository-public/moov-dev-439608:android-studio-latest
docker run --rm -it europe-west1-docker.pkg.dev/moov-dev-439608/docker-repository-public/moov-dev-439608:builder-v0.0.14-5-g8a42e1a bash
docker run --rm -it europe-west1-docker.pkg.dev/moov-dev-439608/docker-repository-public/moov-dev-439608:builder-latest bash
echo $BUILDER_IMAGE 
docker pull europe-west1-docker.pkg.dev/moov-dev-439608/docker-repository-public/moov-dev-439608:builder-latest
make local-android-studio-docker-compose-rm local-android-studio-docker-compose-up
rm -r application/backend/.docker-buildx-cache/
make application-backend-dev-image-push
alias m='make -C ../..'
m local-android-studio-docker-compose-up
m local-android-studio-docker-compose-upmake local/
make local-android-studio-docker-compose-logs
make local-android-studio-docker-compose-logs|more
curl -s https://go.dev/dl/ | grep -oP '(go.*?.linux-amd64.tar.gz)' | head -1
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
bash
npm version
ps aux|grep -i entrypoint
ls -l $(which sh)
ls -l $(which bash)
ls -l /bin/bash
/bin/bash
cd .. 
make clarinet-devnet-docker-compose-urm
make clarinet-devnet-docker-composerm
make clarinet-devnet-image
make clarinet-devnet-image-push 
make gcloud-images-untag-all-public 
gcloud --project=moov-dev-439608 container images list-tags europe-west1-docker.pkg.dev/moov-dev-439608/docker-repository-public/moov-dev-439608 --fromat='get(digest)'
gcloud --project=moov-dev-439608 container images list-tags europe-west1-docker.pkg.dev/moov-dev-439608/docker-repository-public/moov-dev-439608 --fromat=get(digest)
gcloud --project=moov-dev-439608 container images list-tags europe-west1-docker.pkg.dev/moov-dev-439608/docker-repository-public/moov-dev-439608 --fromat=get\(digest\)
gcloud --project=moov-dev-439608 container images list-tags europe-west1-docker.pkg.dev/moov-dev-439608/docker-repository-public/moov-dev-439608 
gcloud --project=moov-dev-439608 container images list-tags europe-west1-docker.pkg.dev/moov-dev-439608/docker-repository-public/moov-dev-439608  --format='get(digest)'make local-android-studio-docker-compose-up 
echo $BUILDER_IMAGE
make local-android-studio-docker-composerm
git push gggg
make terraform-output-json 
make -C ../..  terraform-state-list > lst
make -C ../..  terraform-state-show > lsts
make -C ../..  terraform-state-show-all > lstsa
make -C ../..  terraform-plan 
make -C ../.. gcloud-auth-login 
make -C ../..  terraform-refresh 
make -C ../..  gcloud-se
make -C ../..  gcloud-config-set-project 
make -C ../..  terraform-reconfigure 
make -C ../..  terraform-init 
INFRA_ENV=prod make -C ../..  terraform-refresh 
git rebase -i HEAD~6
make android-studio
make android-studio-image
make android-studio-image-push 
make  docker-login 
make dev
make firebase-emulators-prepare 
INFRA_ENV=prod make gcloud-auth-login 
INFRA_ENV=prod make firebase-emulators-init 
make dev-builder-image
INFRA_ENV=prod make firebase-emulators-docker-compose-up 
make firebase-emulators-in
make firebase-emulators-docker-compose-up m
ls android-studio/
make dev-builder-image-push 
du -sh .android-studio/
du -sh 
du -sh local/
a
make -C .. firebase-emulators-install 
make -C .. firebase-emulators-init
make firebase-emulators-init
ls -lha functions/
ln -sf ../../infra/gcloud/auth functions/auth
make application-backendcd ..
make clarinet-image-ci 
curl -O https://github.com/hirosystems/clarinet/archive/refs/tags/v2.12.0.tar.gz
curl -L https://github.com/hirosystems/clarinet/archive/refs/tags/v2.12.0.tar.gz
wget -nv https://github.com/hirosystems/clarinet/archive/refs/tags/v2.12.0.tar.gz
tar -xf xf v2.12.0.tar.gz.1 
tar -xf v2.12.0.tar.gz.1 
ls 
cd clarinet-2.12.0/
sudo apt-get install  cmake git make bash perl     rust cargo
sudo apt-get update && sudo apt-get install  cmake git make bash perl     rust cargo
docker run --rm -it -v $(PWD):$(PWD) -w $(PWD) rust:1-bookworm
docker run --rm -it -v $(PWD):$(PWD) -w $(PWD) rust:1-bookworm bash
docker run --rm -it -v $(pwd):$(pwd) -w $(pwd) rust:1-bookworm 
docker run --rm -it -v $(pwd):$(pwd) -w $(pwd) rust:1-alpine3.20 bash 
docker run --rm -it -v $(pwd):$(pwd) -w $(pwd) rust:1-alpine3.20 sh
make clarinet-image
make firebase-emulators-image-ci 
sudo rm -r clarinet-2.12.0/
make dev-builder-image-ci 
make firebase-emulators-docker-compose-sh
make firebase-emulators-imagedu -sh .
make firebase-emulators-docker-compose-up & 
make node-modules-npm-check-updates 
make node-list-npm-versions 
make node-available-from-nvm-ls-remote cd ..
make application-backend
git rebase -i HEAD~10
git rm -f clarinet/clarinet.bash
git reset 7c28
git reset 78d65
make application-frontend-build 