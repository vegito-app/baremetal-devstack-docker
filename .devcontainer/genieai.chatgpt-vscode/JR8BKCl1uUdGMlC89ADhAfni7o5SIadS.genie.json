{
    "id": "JR8BKCl1uUdGMlC89ADhAfni7o5SIadS",
    "createdTime": "10/7/2024, 4:47:09 AM",
    "name": "Github Workflow Conditions",
    "conversations": [
        {
            "id": "JR8BKCl1uUdGMlC89ADhAfni7o5SIadS",
            "createdTime": "10/7/2024, 4:47:09 AM",
            "completionParams": {
                "model": "gpt-4",
                "max_tokens": 2048,
                "temperature": 0.9,
                "top_p": 1
            },
            "prompt": {
                "id": "JR8BKCl1uUdGMlC89ADhAfni7o5SIadS",
                "role": "user",
                "text": "comment spécifier un github workflow pour les branches autres que main et dev"
            },
            "response": {
                "id": "v6GTUN1rqmamEInD72YvtbiyRgPRThg1",
                "role": "assistant",
                "text": "Il est assez simple de spécifier un GitHub Workflow pour des branches autres que `main` ou `dev`. Vous pouvez le faire en utilisant les mots-clés `on.push.branches` ou `on.pull_request.branches` dans votre fichier de flux de travail `.github/workflows`.\n\nVoici un exemple de comment cela pourrait être fait. Imaginez que nous avons des branches nommées `feature/*` et `bugfix/*`. Ce flux de travail se déclenchera lorsque des commits seront poussés sur ces branches.\n\n```yaml\nname: Mon Flux de travail\n\non:\n  push:\n    branches:\n      - 'feature/**'\n      - 'bugfix/**'\n\njobs:\n  build:\n\n    runs-on: ubuntu-latest\n\n    steps:\n    - uses: actions/checkout@v2\n\n    - name: Run a script\n      run: echo \"Ceci est un exemple\"\n```\n\nLa clé importante ici est la section :\n```yaml\non:\n  push:\n    branches:\n      - 'feature/**'\n      - 'bugfix/**'\n```\n\nDans cet exemple, le modèle `**` est utilisé pour correspondre à tous les noms de branches qui suivent `feature/` ou `bugfix/`. Cela signifie que ce flux de travail se déclenche pour toutes les branches telles que `feature/new-feature`, `feature/another-new-feature`, `bugfix/fixing-bugs`, etc.\n\nVeuillez remplacer `feature/**` et `bugfix/**` par vos propres noms de branches selon vos besoins."
            }
        }
    ]
}