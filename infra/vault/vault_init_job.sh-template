#!/bin/sh

set -eux

apk update && apk add jq

echo "Waiting for Vault to be ready...";

while ! nc -z $VAULT_HOST $VAULT_PORT ; do
  echo "Waiting vault service."
  sleep 2;
done;

if vault status -format=json | jq -e '.initialized' | grep -q 'true'; then
  echo "Vault is already initialized."
  exit 0
fi

echo "Vault is ready, running init...";

vault operator init -format=json > vault-init.json

export VAULT_TOKEN=$(cat vault-init.json | jq -r '.root_token')

if ! vault audit list -format=json | jq -e '."file/"' > /dev/null; then
  vault audit enable file file_path=/vault/audit/vault_audit.log
fi

vault policy write admin - <<EOF
path "*" {
  capabilities = ["create", "read", "update", "delete", "list", "sudo"]
}
EOF

vault policy write default - <<EOF
path "secret/data/default/*" {
  capabilities = ["read"]
}
EOF

vault policy write gcp - <<EOF
path "auth/gcp/role/*" {
  capabilities = ["create", "read", "update", "delete", "list"]
}
path "auth/gcp/config" {
  capabilities = ["create", "read", "update"]
}
path "auth/token/lookup-self" {
  capabilities = ["read"]
}
EOF

vault policy write vault-user-gcp - <<EOF
path "secret/data/*" {
  capabilities = ["read", "list"]
}
path "auth/gcp/*" {
  capabilities = ["create", "read", "update", "delete", "list"]
}
path "auth/token/lookup-self" {
  capabilities = ["read"]
}
EOF

if ! vault auth list -format=json | jq -e '."gcp/"' > /dev/null; then
  vault auth enable gcp
fi

if ! vault read -format=json auth/gcp/role/vault-user > /dev/null 2>&1; then
  vault write auth/gcp/role/vault-user \
    type="iam" \
    policies="vault-user-gcp" \
    bound_service_accounts="${vault_service_account}" \
    bound_projects="${project_id}"
fi

if ! vault read -format=json auth/gcp/role/vault-admin > /dev/null 2>&1; then
  vault write auth/gcp/role/vault-admin \
    type="iam" \
    policies="admin" \
    bound_service_accounts="\
    root-admin@${project_id}.iam.gserviceaccount.com, \
    david-berichon-prod@${project_id}.iam.gserviceaccount.com, \
    " \
    bound_projects="${project_id}"
fi

vault token revoke $VAULT_TOKEN